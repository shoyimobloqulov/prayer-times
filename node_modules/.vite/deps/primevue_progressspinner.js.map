{
  "version": 3,
  "sources": ["../../src/progressspinner/style/ProgressSpinnerStyle.js", "../../src/progressspinner/BaseProgressSpinner.vue", "../../src/progressspinner/ProgressSpinner.vue", "../../src/progressspinner/ProgressSpinner.vue?vue&type=template&id=d40e031a&lang.js"],
  "sourcesContent": ["import BaseStyle from '@primevue/core/base/style';\n\nconst theme = ({ dt }) => `\n.p-progressspinner {\n    position: relative;\n    margin: 0 auto;\n    width: 100px;\n    height: 100px;\n    display: inline-block;\n}\n\n.p-progressspinner::before {\n    content: \"\";\n    display: block;\n    padding-top: 100%;\n}\n\n.p-progressspinner-spin {\n    height: 100%;\n    transform-origin: center center;\n    width: 100%;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    margin: auto;\n    animation: p-progressspinner-rotate 2s linear infinite;\n}\n\n.p-progressspinner-circle {\n    stroke-dasharray: 89, 200;\n    stroke-dashoffset: 0;\n    stroke: ${dt('progressspinner.color.1')};\n    animation: p-progressspinner-dash 1.5s ease-in-out infinite, p-progressspinner-color 6s ease-in-out infinite;\n    stroke-linecap: round;\n}\n\n@keyframes p-progressspinner-rotate {\n    100% {\n        transform: rotate(360deg);\n    }\n}\n@keyframes p-progressspinner-dash {\n    0% {\n        stroke-dasharray: 1, 200;\n        stroke-dashoffset: 0;\n    }\n    50% {\n        stroke-dasharray: 89, 200;\n        stroke-dashoffset: -35px;\n    }\n    100% {\n        stroke-dasharray: 89, 200;\n        stroke-dashoffset: -124px;\n    }\n}\n@keyframes p-progressspinner-color {\n    100%,\n    0% {\n        stroke: ${dt('progressspinner.color.1')};\n    }\n    40% {\n        stroke: ${dt('progressspinner.color.2')};\n    }\n    66% {\n        stroke: ${dt('progressspinner.color.3')};\n    }\n    80%,\n    90% {\n        stroke: ${dt('progressspinner.color.4')};\n    }\n}\n`;\n\nconst classes = {\n    root: 'p-progressspinner',\n    spin: 'p-progressspinner-spin',\n    circle: 'p-progressspinner-circle'\n};\n\nexport default BaseStyle.extend({\n    name: 'progressspinner',\n    theme,\n    classes\n});\n", "<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport ProgressSpinnerStyle from 'primevue/progressspinner/style';\n\nexport default {\n    name: 'BaseProgressSpinner',\n    extends: BaseComponent,\n    props: {\n        strokeWidth: {\n            type: String,\n            default: '2'\n        },\n        fill: {\n            type: String,\n            default: 'none'\n        },\n        animationDuration: {\n            type: String,\n            default: '2s'\n        }\n    },\n    style: ProgressSpinnerStyle,\n    provide() {\n        return {\n            $pcProgressSpinner: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n", "<template>\n    <div :class=\"cx('root')\" role=\"progressbar\" v-bind=\"ptmi('root')\">\n        <svg :class=\"cx('spin')\" viewBox=\"25 25 50 50\" :style=\"svgStyle\" v-bind=\"ptm('spin')\">\n            <circle :class=\"cx('circle')\" cx=\"50\" cy=\"50\" r=\"20\" :fill=\"fill\" :stroke-width=\"strokeWidth\" strokeMiterlimit=\"10\" v-bind=\"ptm('circle')\" />\n        </svg>\n    </div>\n</template>\n\n<script>\nimport BaseProgressSpinner from './BaseProgressSpinner.vue';\n\nexport default {\n    name: 'ProgressSpinner',\n    extends: BaseProgressSpinner,\n    inheritAttrs: false,\n    computed: {\n        svgStyle() {\n            return {\n                'animation-duration': this.animationDuration\n            };\n        }\n    }\n};\n</script>\n", "<template>\n    <div :class=\"cx('root')\" role=\"progressbar\" v-bind=\"ptmi('root')\">\n        <svg :class=\"cx('spin')\" viewBox=\"25 25 50 50\" :style=\"svgStyle\" v-bind=\"ptm('spin')\">\n            <circle :class=\"cx('circle')\" cx=\"50\" cy=\"50\" r=\"20\" :fill=\"fill\" :stroke-width=\"strokeWidth\" strokeMiterlimit=\"10\" v-bind=\"ptm('circle')\" />\n        </svg>\n    </div>\n</template>\n\n<script>\nimport BaseProgressSpinner from './BaseProgressSpinner.vue';\n\nexport default {\n    name: 'ProgressSpinner',\n    extends: BaseProgressSpinner,\n    inheritAttrs: false,\n    computed: {\n        svgStyle() {\n            return {\n                'animation-duration': this.animationDuration\n            };\n        }\n    }\n};\n</script>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAEA,IAAMA,QAAQ,SAARA,OAAKC,MAAA;AAAA,MAAMC,KAAED,KAAFC;AAAE,SAAA,qmBAAAC,OA+BLD,GAAG,yBAAyB,GAAC,onBAAA,EAAAC,OA2BzBD,GAAG,yBAAyB,GAAC,uCAAA,EAAAC,OAG7BD,GAAG,yBAAyB,GAACC,uCAAAA,EAAAA,OAG7BD,GAAG,yBAAyB,GAAC,iDAAA,EAAAC,OAI7BD,GAAG,yBAAyB,GAAC,eAAA;AAAA;AAK/C,IAAME,UAAU;EACZC,MAAM;EACNC,MAAM;EACNC,QAAQ;AACZ;AAEA,IAAA,uBAAeC,UAAUC,OAAO;EAC5BC,MAAM;EACNV;EACAI;AACJ,CAAC;;;ACjFD,IAAA,WAAe;EACXO,MAAM;EACN,WAASC;EACTC,OAAO;IACHC,aAAa;MACTC,MAAMC;MACN,WAAS;;IAEbC,MAAM;MACFF,MAAMC;MACN,WAAS;;IAEbE,mBAAmB;MACfH,MAAMC;MACN,WAAS;IACb;;EAEJG,OAAOC;EACPC,SAAO,SAAAA,UAAG;AACN,WAAO;MACHC,oBAAoB;MACpBC,iBAAiB;;EAEzB;AACJ;ACjBA,IAAAC,UAAe;EACXb,MAAM;EACN,WAASc;EACTC,cAAc;EACdC,UAAU;IACNC,UAAQ,SAAAA,WAAG;AACP,aAAO;QACH,sBAAsB,KAAKV;;IAEnC;EACJ;AACJ;;;ACrBI,SAAAW,UAAA,GAAAC,mBAIK,OAJLC,WAIK;IAJC,SAAOC,KAAEC,GAAA,MAAA;IAAUC,MAAK;KAAsBF,KAAIG,KAAA,MAAA,CAAA,GAAA,EACpDN,UAAA,GAAAC,mBAEK,OAFLC,WAEK;IAFC,SAAOC,KAAEC,GAAA,MAAA;IAAUG,SAAQ;IAAejB,OAAOkB,SAAQT;KAAUI,KAAGM,IAAA,MAAA,CAAA,GAAA,CACxEC,gBAA4I,UAA5IR,WAA4I;IAAnI,SAAOC,KAAEC,GAAA,QAAA;IAAYA,IAAG;IAAKO,IAAG;IAAKC,GAAE;IAAMxB,MAAMe,KAAIf;IAAG,gBAAce,KAAWlB;IAAE4B,kBAAiB;KAAaV,KAAGM,IAAA,QAAA,CAAA,GAAA,MAAA,IAAAK,UAAA,CAAA,GAAA,EAAA,EAAA,GAAA,EAAA;;;",
  "names": ["theme", "_ref", "dt", "concat", "classes", "root", "spin", "circle", "BaseStyle", "extend", "name", "name", "BaseComponent", "props", "strokeWidth", "type", "String", "fill", "animationDuration", "style", "ProgressSpinnerStyle", "provide", "$pcProgressSpinner", "$parentInstance", "script", "BaseProgressSpinner", "inheritAttrs", "computed", "svgStyle", "_openBlock", "_createElementBlock", "_mergeProps", "_ctx", "cx", "role", "ptmi", "viewBox", "$options", "ptm", "_createElementVNode", "cy", "r", "strokeMiterlimit", "_hoisted_1"]
}
