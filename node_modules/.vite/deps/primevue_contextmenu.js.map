{
  "version": 3,
  "sources": ["../../src/contextmenu/style/ContextMenuStyle.js", "../../src/contextmenu/BaseContextMenu.vue", "../../src/contextmenu/ContextMenuSub.vue", "../../src/contextmenu/ContextMenuSub.vue?vue&type=template&id=165dc403&lang.js", "../../src/contextmenu/ContextMenu.vue", "../../src/contextmenu/ContextMenu.vue?vue&type=template&id=65367f19&lang.js"],
  "sourcesContent": ["import BaseStyle from '@primevue/core/base/style';\n\nconst theme = ({ dt }) => `\n.p-contextmenu {\n    background: ${dt('contextmenu.background')};\n    color: ${dt('contextmenu.color')};\n    border: 1px solid ${dt('contextmenu.border.color')};\n    border-radius: ${dt('contextmenu.border.radius')};\n    box-shadow: ${dt('contextmenu.shadow')};\n    min-width: 12.5rem;\n}\n\n.p-contextmenu-root-list,\n.p-contextmenu-submenu {\n    margin: 0;\n    padding: ${dt('contextmenu.list.padding')};\n    list-style: none;\n    outline: 0 none;\n    display: flex;\n    flex-direction: column;\n    gap: ${dt('contextmenu.list.gap')};\n}\n\n.p-contextmenu-submenu {\n    position: absolute;\n    display: flex;\n    flex-direction: column;\n    min-width: 100%;\n    z-index: 1;\n    background: ${dt('contextmenu.background')};\n    color: ${dt('contextmenu.color')};\n    border: 1px solid ${dt('contextmenu.border.color')};\n    border-radius: ${dt('contextmenu.border.radius')};\n    box-shadow: ${dt('contextmenu.shadow')};\n}\n\n.p-contextmenu-item {\n    position: relative;\n}\n\n.p-contextmenu-item-content {\n    transition: background ${dt('contextmenu.transition.duration')}, color ${dt('contextmenu.transition.duration')};\n    border-radius: ${dt('contextmenu.item.border.radius')};\n    color: ${dt('contextmenu.item.color')};\n}\n\n.p-contextmenu-item-link {\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    overflow: hidden;\n    position: relative;\n    color: inherit;\n    padding: ${dt('contextmenu.item.padding')};\n    gap: ${dt('contextmenu.item.gap')};\n    user-select: none;\n}\n\n.p-contextmenu-item-label {\n    line-height: 1;\n}\n\n.p-contextmenu-item-icon {\n    color: ${dt('contextmenu.item.icon.color')};\n}\n\n.p-contextmenu-submenu-icon {\n    color: ${dt('contextmenu.submenu.icon.color')};\n    margin-left: auto;\n    font-size: ${dt('contextmenu.submenu.icon.size')};\n    width: ${dt('contextmenu.submenu.icon.size')};\n    height: ${dt('contextmenu.submenu.icon.size')};\n}\n\n.p-contextmenu-item.p-focus > .p-contextmenu-item-content {\n    color: ${dt('contextmenu.item.focus.color')};\n    background: ${dt('contextmenu.item.focus.background')};\n}\n\n.p-contextmenu-item.p-focus > .p-contextmenu-item-content .p-contextmenu-item-icon {\n    color: ${dt('contextmenu.item.icon.focus.color')};\n}\n\n.p-contextmenu-item.p-focus > .p-contextmenu-item-content .p-contextmenu-submenu-icon {\n    color: ${dt('contextmenu.submenu.icon.focus.color')};\n}\n\n.p-contextmenu-item:not(.p-disabled) > .p-contextmenu-item-content:hover {\n    color: ${dt('contextmenu.item.focus.color')};\n    background: ${dt('contextmenu.item.focus.background')};\n}\n\n.p-contextmenu-item:not(.p-disabled) > .p-contextmenu-item-content:hover .p-contextmenu-item-icon {\n    color: ${dt('contextmenu.item.icon.focus.color')};\n}\n\n.p-contextmenu-item:not(.p-disabled) > .p-contextmenu-item-content:hover .p-contextmenu-submenu-icon {\n    color: ${dt('contextmenu.submenu.icon.focus.color')};\n}\n\n.p-contextmenu-item-active > .p-contextmenu-item-content {\n    color: ${dt('contextmenu.item.active.color')};\n    background: ${dt('contextmenu.item.active.background')};\n}\n\n.p-contextmenu-item-active > .p-contextmenu-item-content .p-contextmenu-item-icon {\n    color: ${dt('contextmenu.item.icon.active.color')};\n}\n\n.p-contextmenu-item-active > .p-contextmenu-item-content .p-contextmenu-submenu-icon {\n    color: ${dt('contextmenu.submenu.icon.active.color')};\n}\n\n.p-contextmenu-separator {\n    border-top: 1px solid  ${dt('contextmenu.separator.border.color')};\n}\n\n.p-contextmenu-enter-from,\n.p-contextmenu-leave-active {\n    opacity: 0;\n}\n\n.p-contextmenu-enter-active {\n    transition: opacity 250ms;\n}\n`;\n\nconst classes = {\n    root: 'p-contextmenu p-component',\n    rootList: 'p-contextmenu-root-list',\n    item: ({ instance, processedItem }) => [\n        'p-contextmenu-item',\n        {\n            'p-contextmenu-item-active': instance.isItemActive(processedItem),\n            'p-focus': instance.isItemFocused(processedItem),\n            'p-disabled': instance.isItemDisabled(processedItem)\n        }\n    ],\n    itemContent: 'p-contextmenu-item-content',\n    itemLink: 'p-contextmenu-item-link',\n    itemIcon: 'p-contextmenu-item-icon',\n    itemLabel: 'p-contextmenu-item-label',\n    submenuIcon: 'p-contextmenu-submenu-icon',\n    submenu: 'p-contextmenu-submenu',\n    separator: 'p-contextmenu-separator'\n};\n\nexport default BaseStyle.extend({\n    name: 'contextmenu',\n    theme,\n    classes\n});\n", "<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport ContextMenuStyle from 'primevue/contextmenu/style';\n\nexport default {\n    name: 'BaseContextMenu',\n    extends: BaseComponent,\n    props: {\n        model: {\n            type: Array,\n            default: null\n        },\n        appendTo: {\n            type: [String, Object],\n            default: 'body'\n        },\n        autoZIndex: {\n            type: Boolean,\n            default: true\n        },\n        baseZIndex: {\n            type: Number,\n            default: 0\n        },\n        global: {\n            type: Boolean,\n            default: false\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        },\n        ariaLabelledby: {\n            type: String,\n            default: null\n        },\n        ariaLabel: {\n            type: String,\n            default: null\n        }\n    },\n    style: ContextMenuStyle,\n    provide() {\n        return {\n            $pcContextMenu: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n", "<template>\n    <transition name=\"p-contextmenusub\" @enter=\"onEnter\" v-bind=\"ptm('menu.transition')\">\n        <ul v-if=\"root ? true : visible\" ref=\"container\" :tabindex=\"tabindex\" v-bind=\"ptm('rootList')\">\n            <template v-for=\"(processedItem, index) of items\" :key=\"getItemKey(processedItem)\">\n                <li\n                    v-if=\"isItemVisible(processedItem) && !getItemProp(processedItem, 'separator')\"\n                    :id=\"getItemId(processedItem)\"\n                    :style=\"getItemProp(processedItem, 'style')\"\n                    :class=\"[cx('item', { processedItem }), getItemProp(processedItem, 'class')]\"\n                    role=\"menuitem\"\n                    :aria-label=\"getItemLabel(processedItem)\"\n                    :aria-disabled=\"isItemDisabled(processedItem) || undefined\"\n                    :aria-expanded=\"isItemGroup(processedItem) ? isItemActive(processedItem) : undefined\"\n                    :aria-haspopup=\"isItemGroup(processedItem) && !getItemProp(processedItem, 'to') ? 'menu' : undefined\"\n                    :aria-level=\"level + 1\"\n                    :aria-setsize=\"getAriaSetSize()\"\n                    :aria-posinset=\"getAriaPosInset(index)\"\n                    v-bind=\"getPTOptions('item', processedItem, index)\"\n                    :data-p-active=\"isItemActive(processedItem)\"\n                    :data-p-focused=\"isItemFocused(processedItem)\"\n                    :data-p-disabled=\"isItemDisabled(processedItem)\"\n                >\n                    <div\n                        :class=\"cx('itemContent')\"\n                        @click=\"onItemClick($event, processedItem)\"\n                        @mouseenter=\"onItemMouseEnter($event, processedItem)\"\n                        @mousemove=\"onItemMouseMove($event, processedItem)\"\n                        v-bind=\"getPTOptions('itemContent', processedItem, index)\"\n                    >\n                        <template v-if=\"!templates.item\">\n                            <a v-ripple :href=\"getItemProp(processedItem, 'url')\" :class=\"cx('itemLink')\" :target=\"getItemProp(processedItem, 'target')\" tabindex=\"-1\" aria-hidden=\"true\" v-bind=\"getPTOptions('itemLink', processedItem, index)\">\n                                <component v-if=\"templates.itemicon\" :is=\"templates.itemicon\" :item=\"processedItem.item\" :class=\"cx('itemIcon')\" />\n                                <span v-else-if=\"getItemProp(processedItem, 'icon')\" :class=\"[cx('itemIcon'), getItemProp(processedItem, 'icon')]\" v-bind=\"getPTOptions('itemIcon', processedItem, index)\" />\n                                <span :id=\"getItemLabelId(processedItem)\" :class=\"cx('itemLabel')\" v-bind=\"getPTOptions('itemLabel', processedItem, index)\">{{ getItemLabel(processedItem) }}</span>\n                                <template v-if=\"getItemProp(processedItem, 'items')\">\n                                    <component v-if=\"templates.submenuicon\" :is=\"templates.submenuicon\" :active=\"isItemActive(processedItem)\" :class=\"cx('submenuIcon')\" />\n                                    <AngleRightIcon v-else :class=\"cx('submenuIcon')\" v-bind=\"getPTOptions('submenuicon', processedItem, index)\" />\n                                </template>\n                            </a>\n                        </template>\n                        <component v-else :is=\"templates.item\" :item=\"processedItem.item\" :hasSubmenu=\"getItemProp(processedItem, 'items')\" :label=\"getItemLabel(processedItem)\" :props=\"getMenuItemProps(processedItem, index)\"></component>\n                    </div>\n                    <ContextMenuSub\n                        v-if=\"isItemVisible(processedItem) && isItemGroup(processedItem)\"\n                        :id=\"getItemId(processedItem) + '_list'\"\n                        role=\"menu\"\n                        :class=\"cx('submenu')\"\n                        :menuId=\"menuId\"\n                        :focusedItemId=\"focusedItemId\"\n                        :items=\"processedItem.items\"\n                        :templates=\"templates\"\n                        :activeItemPath=\"activeItemPath\"\n                        :level=\"level + 1\"\n                        :visible=\"isItemActive(processedItem) && isItemGroup(processedItem)\"\n                        :pt=\"pt\"\n                        :unstyled=\"unstyled\"\n                        @item-click=\"$emit('item-click', $event)\"\n                        @item-mouseenter=\"$emit('item-mouseenter', $event)\"\n                        @item-mousemove=\"$emit('item-mousemove', $event)\"\n                        :aria-labelledby=\"getItemLabelId(processedItem)\"\n                        v-bind=\"ptm('submenu')\"\n                    />\n                </li>\n                <li\n                    v-if=\"isItemVisible(processedItem) && getItemProp(processedItem, 'separator')\"\n                    :id=\"getItemId(processedItem)\"\n                    :style=\"getItemProp(processedItem, 'style')\"\n                    :class=\"[cx('separator'), getItemProp(processedItem, 'class')]\"\n                    role=\"separator\"\n                    v-bind=\"ptm('separator')\"\n                ></li>\n            </template>\n        </ul>\n    </transition>\n</template>\n\n<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport { nestedPosition } from '@primeuix/utils/dom';\nimport { resolve, isNotEmpty } from '@primeuix/utils/object';\nimport AngleRightIcon from '@primevue/icons/angleright';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps } from 'vue';\n\nexport default {\n    name: 'ContextMenuSub',\n    hostName: 'ContextMenu',\n    extends: BaseComponent,\n    emits: ['item-click', 'item-mouseenter', 'item-mousemove'],\n    props: {\n        items: {\n            type: Array,\n            default: null\n        },\n        menuId: {\n            type: String,\n            default: null\n        },\n        focusedItemId: {\n            type: String,\n            default: null\n        },\n        root: {\n            type: Boolean,\n            default: false\n        },\n        visible: {\n            type: Boolean,\n            default: false\n        },\n        level: {\n            type: Number,\n            default: 0\n        },\n        templates: {\n            type: Object,\n            default: null\n        },\n        activeItemPath: {\n            type: Object,\n            default: null\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        }\n    },\n    methods: {\n        getItemId(processedItem) {\n            return `${this.menuId}_${processedItem.key}`;\n        },\n        getItemKey(processedItem) {\n            return this.getItemId(processedItem);\n        },\n        getItemProp(processedItem, name, params) {\n            return processedItem && processedItem.item ? resolve(processedItem.item[name], params) : undefined;\n        },\n        getItemLabel(processedItem) {\n            return this.getItemProp(processedItem, 'label');\n        },\n        getItemLabelId(processedItem) {\n            return `${this.menuId}_${processedItem.key}_label`;\n        },\n        getPTOptions(key, processedItem, index) {\n            return this.ptm(key, {\n                context: {\n                    item: processedItem,\n                    active: this.isItemActive(processedItem),\n                    focused: this.isItemFocused(processedItem),\n                    disabled: this.isItemDisabled(processedItem),\n                    index\n                }\n            });\n        },\n        isItemActive(processedItem) {\n            return this.activeItemPath.some((path) => path.key === processedItem.key);\n        },\n        isItemVisible(processedItem) {\n            return this.getItemProp(processedItem, 'visible') !== false;\n        },\n        isItemDisabled(processedItem) {\n            return this.getItemProp(processedItem, 'disabled');\n        },\n        isItemFocused(processedItem) {\n            return this.focusedItemId === this.getItemId(processedItem);\n        },\n        isItemGroup(processedItem) {\n            return isNotEmpty(processedItem.items);\n        },\n        onItemClick(event, processedItem) {\n            this.getItemProp(processedItem, 'command', { originalEvent: event, item: processedItem.item });\n            this.$emit('item-click', { originalEvent: event, processedItem, isFocus: true });\n        },\n        onItemMouseEnter(event, processedItem) {\n            this.$emit('item-mouseenter', { originalEvent: event, processedItem });\n        },\n        onItemMouseMove(event, processedItem) {\n            this.$emit('item-mousemove', { originalEvent: event, processedItem, isFocus: true });\n        },\n        getAriaSetSize() {\n            return this.items.filter((processedItem) => this.isItemVisible(processedItem) && !this.getItemProp(processedItem, 'separator')).length;\n        },\n        getAriaPosInset(index) {\n            return index - this.items.slice(0, index).filter((processedItem) => this.isItemVisible(processedItem) && this.getItemProp(processedItem, 'separator')).length + 1;\n        },\n        onEnter() {\n            nestedPosition(this.$refs.container, this.level);\n        },\n        getMenuItemProps(processedItem, index) {\n            return {\n                action: mergeProps(\n                    {\n                        class: this.cx('itemLink'),\n                        tabindex: -1,\n                        'aria-hidden': true\n                    },\n                    this.getPTOptions('itemLink', processedItem, index)\n                ),\n                icon: mergeProps(\n                    {\n                        class: [this.cx('itemIcon'), this.getItemProp(processedItem, 'icon')]\n                    },\n                    this.getPTOptions('itemIcon', processedItem, index)\n                ),\n                label: mergeProps(\n                    {\n                        class: this.cx('itemLabel')\n                    },\n                    this.getPTOptions('itemLabel', processedItem, index)\n                ),\n                submenuicon: mergeProps(\n                    {\n                        class: this.cx('submenuIcon')\n                    },\n                    this.getPTOptions('submenuicon', processedItem, index)\n                )\n            };\n        }\n    },\n\n    components: {\n        AngleRightIcon: AngleRightIcon\n    },\n    directives: {\n        ripple: Ripple\n    }\n};\n</script>\n", "<template>\n    <transition name=\"p-contextmenusub\" @enter=\"onEnter\" v-bind=\"ptm('menu.transition')\">\n        <ul v-if=\"root ? true : visible\" ref=\"container\" :tabindex=\"tabindex\" v-bind=\"ptm('rootList')\">\n            <template v-for=\"(processedItem, index) of items\" :key=\"getItemKey(processedItem)\">\n                <li\n                    v-if=\"isItemVisible(processedItem) && !getItemProp(processedItem, 'separator')\"\n                    :id=\"getItemId(processedItem)\"\n                    :style=\"getItemProp(processedItem, 'style')\"\n                    :class=\"[cx('item', { processedItem }), getItemProp(processedItem, 'class')]\"\n                    role=\"menuitem\"\n                    :aria-label=\"getItemLabel(processedItem)\"\n                    :aria-disabled=\"isItemDisabled(processedItem) || undefined\"\n                    :aria-expanded=\"isItemGroup(processedItem) ? isItemActive(processedItem) : undefined\"\n                    :aria-haspopup=\"isItemGroup(processedItem) && !getItemProp(processedItem, 'to') ? 'menu' : undefined\"\n                    :aria-level=\"level + 1\"\n                    :aria-setsize=\"getAriaSetSize()\"\n                    :aria-posinset=\"getAriaPosInset(index)\"\n                    v-bind=\"getPTOptions('item', processedItem, index)\"\n                    :data-p-active=\"isItemActive(processedItem)\"\n                    :data-p-focused=\"isItemFocused(processedItem)\"\n                    :data-p-disabled=\"isItemDisabled(processedItem)\"\n                >\n                    <div\n                        :class=\"cx('itemContent')\"\n                        @click=\"onItemClick($event, processedItem)\"\n                        @mouseenter=\"onItemMouseEnter($event, processedItem)\"\n                        @mousemove=\"onItemMouseMove($event, processedItem)\"\n                        v-bind=\"getPTOptions('itemContent', processedItem, index)\"\n                    >\n                        <template v-if=\"!templates.item\">\n                            <a v-ripple :href=\"getItemProp(processedItem, 'url')\" :class=\"cx('itemLink')\" :target=\"getItemProp(processedItem, 'target')\" tabindex=\"-1\" aria-hidden=\"true\" v-bind=\"getPTOptions('itemLink', processedItem, index)\">\n                                <component v-if=\"templates.itemicon\" :is=\"templates.itemicon\" :item=\"processedItem.item\" :class=\"cx('itemIcon')\" />\n                                <span v-else-if=\"getItemProp(processedItem, 'icon')\" :class=\"[cx('itemIcon'), getItemProp(processedItem, 'icon')]\" v-bind=\"getPTOptions('itemIcon', processedItem, index)\" />\n                                <span :id=\"getItemLabelId(processedItem)\" :class=\"cx('itemLabel')\" v-bind=\"getPTOptions('itemLabel', processedItem, index)\">{{ getItemLabel(processedItem) }}</span>\n                                <template v-if=\"getItemProp(processedItem, 'items')\">\n                                    <component v-if=\"templates.submenuicon\" :is=\"templates.submenuicon\" :active=\"isItemActive(processedItem)\" :class=\"cx('submenuIcon')\" />\n                                    <AngleRightIcon v-else :class=\"cx('submenuIcon')\" v-bind=\"getPTOptions('submenuicon', processedItem, index)\" />\n                                </template>\n                            </a>\n                        </template>\n                        <component v-else :is=\"templates.item\" :item=\"processedItem.item\" :hasSubmenu=\"getItemProp(processedItem, 'items')\" :label=\"getItemLabel(processedItem)\" :props=\"getMenuItemProps(processedItem, index)\"></component>\n                    </div>\n                    <ContextMenuSub\n                        v-if=\"isItemVisible(processedItem) && isItemGroup(processedItem)\"\n                        :id=\"getItemId(processedItem) + '_list'\"\n                        role=\"menu\"\n                        :class=\"cx('submenu')\"\n                        :menuId=\"menuId\"\n                        :focusedItemId=\"focusedItemId\"\n                        :items=\"processedItem.items\"\n                        :templates=\"templates\"\n                        :activeItemPath=\"activeItemPath\"\n                        :level=\"level + 1\"\n                        :visible=\"isItemActive(processedItem) && isItemGroup(processedItem)\"\n                        :pt=\"pt\"\n                        :unstyled=\"unstyled\"\n                        @item-click=\"$emit('item-click', $event)\"\n                        @item-mouseenter=\"$emit('item-mouseenter', $event)\"\n                        @item-mousemove=\"$emit('item-mousemove', $event)\"\n                        :aria-labelledby=\"getItemLabelId(processedItem)\"\n                        v-bind=\"ptm('submenu')\"\n                    />\n                </li>\n                <li\n                    v-if=\"isItemVisible(processedItem) && getItemProp(processedItem, 'separator')\"\n                    :id=\"getItemId(processedItem)\"\n                    :style=\"getItemProp(processedItem, 'style')\"\n                    :class=\"[cx('separator'), getItemProp(processedItem, 'class')]\"\n                    role=\"separator\"\n                    v-bind=\"ptm('separator')\"\n                ></li>\n            </template>\n        </ul>\n    </transition>\n</template>\n\n<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport { nestedPosition } from '@primeuix/utils/dom';\nimport { resolve, isNotEmpty } from '@primeuix/utils/object';\nimport AngleRightIcon from '@primevue/icons/angleright';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps } from 'vue';\n\nexport default {\n    name: 'ContextMenuSub',\n    hostName: 'ContextMenu',\n    extends: BaseComponent,\n    emits: ['item-click', 'item-mouseenter', 'item-mousemove'],\n    props: {\n        items: {\n            type: Array,\n            default: null\n        },\n        menuId: {\n            type: String,\n            default: null\n        },\n        focusedItemId: {\n            type: String,\n            default: null\n        },\n        root: {\n            type: Boolean,\n            default: false\n        },\n        visible: {\n            type: Boolean,\n            default: false\n        },\n        level: {\n            type: Number,\n            default: 0\n        },\n        templates: {\n            type: Object,\n            default: null\n        },\n        activeItemPath: {\n            type: Object,\n            default: null\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        }\n    },\n    methods: {\n        getItemId(processedItem) {\n            return `${this.menuId}_${processedItem.key}`;\n        },\n        getItemKey(processedItem) {\n            return this.getItemId(processedItem);\n        },\n        getItemProp(processedItem, name, params) {\n            return processedItem && processedItem.item ? resolve(processedItem.item[name], params) : undefined;\n        },\n        getItemLabel(processedItem) {\n            return this.getItemProp(processedItem, 'label');\n        },\n        getItemLabelId(processedItem) {\n            return `${this.menuId}_${processedItem.key}_label`;\n        },\n        getPTOptions(key, processedItem, index) {\n            return this.ptm(key, {\n                context: {\n                    item: processedItem,\n                    active: this.isItemActive(processedItem),\n                    focused: this.isItemFocused(processedItem),\n                    disabled: this.isItemDisabled(processedItem),\n                    index\n                }\n            });\n        },\n        isItemActive(processedItem) {\n            return this.activeItemPath.some((path) => path.key === processedItem.key);\n        },\n        isItemVisible(processedItem) {\n            return this.getItemProp(processedItem, 'visible') !== false;\n        },\n        isItemDisabled(processedItem) {\n            return this.getItemProp(processedItem, 'disabled');\n        },\n        isItemFocused(processedItem) {\n            return this.focusedItemId === this.getItemId(processedItem);\n        },\n        isItemGroup(processedItem) {\n            return isNotEmpty(processedItem.items);\n        },\n        onItemClick(event, processedItem) {\n            this.getItemProp(processedItem, 'command', { originalEvent: event, item: processedItem.item });\n            this.$emit('item-click', { originalEvent: event, processedItem, isFocus: true });\n        },\n        onItemMouseEnter(event, processedItem) {\n            this.$emit('item-mouseenter', { originalEvent: event, processedItem });\n        },\n        onItemMouseMove(event, processedItem) {\n            this.$emit('item-mousemove', { originalEvent: event, processedItem, isFocus: true });\n        },\n        getAriaSetSize() {\n            return this.items.filter((processedItem) => this.isItemVisible(processedItem) && !this.getItemProp(processedItem, 'separator')).length;\n        },\n        getAriaPosInset(index) {\n            return index - this.items.slice(0, index).filter((processedItem) => this.isItemVisible(processedItem) && this.getItemProp(processedItem, 'separator')).length + 1;\n        },\n        onEnter() {\n            nestedPosition(this.$refs.container, this.level);\n        },\n        getMenuItemProps(processedItem, index) {\n            return {\n                action: mergeProps(\n                    {\n                        class: this.cx('itemLink'),\n                        tabindex: -1,\n                        'aria-hidden': true\n                    },\n                    this.getPTOptions('itemLink', processedItem, index)\n                ),\n                icon: mergeProps(\n                    {\n                        class: [this.cx('itemIcon'), this.getItemProp(processedItem, 'icon')]\n                    },\n                    this.getPTOptions('itemIcon', processedItem, index)\n                ),\n                label: mergeProps(\n                    {\n                        class: this.cx('itemLabel')\n                    },\n                    this.getPTOptions('itemLabel', processedItem, index)\n                ),\n                submenuicon: mergeProps(\n                    {\n                        class: this.cx('submenuIcon')\n                    },\n                    this.getPTOptions('submenuicon', processedItem, index)\n                )\n            };\n        }\n    },\n\n    components: {\n        AngleRightIcon: AngleRightIcon\n    },\n    directives: {\n        ripple: Ripple\n    }\n};\n</script>\n", "<template>\n    <Portal :appendTo=\"appendTo\">\n        <transition name=\"p-contextmenu\" @enter=\"onEnter\" @after-enter=\"onAfterEnter\" @leave=\"onLeave\" @after-leave=\"onAfterLeave\" v-bind=\"ptm('transition')\">\n            <div v-if=\"visible\" :ref=\"containerRef\" :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n                <ContextMenuSub\n                    :ref=\"listRef\"\n                    :id=\"id + '_list'\"\n                    :class=\"cx('rootList')\"\n                    role=\"menubar\"\n                    :root=\"true\"\n                    :tabindex=\"tabindex\"\n                    aria-orientation=\"vertical\"\n                    :aria-activedescendant=\"focused ? focusedItemIdx : undefined\"\n                    :menuId=\"id\"\n                    :focusedItemId=\"focused ? focusedItemIdx : undefined\"\n                    :items=\"processedItems\"\n                    :templates=\"$slots\"\n                    :activeItemPath=\"activeItemPath\"\n                    :aria-labelledby=\"ariaLabelledby\"\n                    :aria-label=\"ariaLabel\"\n                    :level=\"0\"\n                    :visible=\"submenuVisible\"\n                    :pt=\"pt\"\n                    :unstyled=\"unstyled\"\n                    @focus=\"onFocus\"\n                    @blur=\"onBlur\"\n                    @keydown=\"onKeyDown\"\n                    @item-click=\"onItemClick\"\n                    @item-mouseenter=\"onItemMouseEnter\"\n                    @item-mousemove=\"onItemMouseMove\"\n                />\n            </div>\n        </transition>\n    </Portal>\n</template>\n\n<script>\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport { focus, findSingle, addStyle, getHiddenElementOuterWidth, getHiddenElementOuterHeight, getViewport, isTouchDevice } from '@primeuix/utils/dom';\nimport { resolve, isNotEmpty, isPrintableCharacter, isEmpty, findLastIndex } from '@primeuix/utils/object';\nimport { ZIndex } from '@primeuix/utils/zindex';\nimport Portal from 'primevue/portal';\nimport BaseContextMenu from './BaseContextMenu.vue';\nimport ContextMenuSub from './ContextMenuSub.vue';\n\nexport default {\n    name: 'ContextMenu',\n    extends: BaseContextMenu,\n    inheritAttrs: false,\n    emits: ['focus', 'blur', 'show', 'hide', 'before-show', 'before-hide'],\n    target: null,\n    outsideClickListener: null,\n    resizeListener: null,\n    documentContextMenuListener: null,\n    pageX: null,\n    pageY: null,\n    container: null,\n    list: null,\n    data() {\n        return {\n            id: this.$attrs.id,\n            focused: false,\n            focusedItemInfo: { index: -1, level: 0, parentKey: '' },\n            activeItemPath: [],\n            visible: false,\n            submenuVisible: false\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        activeItemPath(newPath) {\n            if (isNotEmpty(newPath)) {\n                this.bindOutsideClickListener();\n                this.bindResizeListener();\n            } else if (!this.visible) {\n                this.unbindOutsideClickListener();\n                this.unbindResizeListener();\n            }\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n\n        if (this.global) {\n            this.bindDocumentContextMenuListener();\n        }\n    },\n    beforeUnmount() {\n        this.unbindResizeListener();\n        this.unbindOutsideClickListener();\n        this.unbindDocumentContextMenuListener();\n\n        if (this.container && this.autoZIndex) {\n            ZIndex.clear(this.container);\n        }\n\n        this.target = null;\n        this.container = null;\n    },\n    methods: {\n        getItemProp(item, name) {\n            return item ? resolve(item[name]) : undefined;\n        },\n        getItemLabel(item) {\n            return this.getItemProp(item, 'label');\n        },\n        isItemDisabled(item) {\n            return this.getItemProp(item, 'disabled');\n        },\n        isItemVisible(item) {\n            return this.getItemProp(item, 'visible') !== false;\n        },\n        isItemGroup(item) {\n            return isNotEmpty(this.getItemProp(item, 'items'));\n        },\n        isItemSeparator(item) {\n            return this.getItemProp(item, 'separator');\n        },\n        getProccessedItemLabel(processedItem) {\n            return processedItem ? this.getItemLabel(processedItem.item) : undefined;\n        },\n        isProccessedItemGroup(processedItem) {\n            return processedItem && isNotEmpty(processedItem.items);\n        },\n        toggle(event) {\n            this.visible ? this.hide() : this.show(event);\n        },\n        show(event) {\n            this.$emit('before-show');\n            this.activeItemPath = [];\n            this.focusedItemInfo = { index: -1, level: 0, parentKey: '' };\n            focus(this.list);\n\n            this.pageX = event.pageX;\n            this.pageY = event.pageY;\n            this.visible ? this.position() : (this.visible = true);\n\n            event.stopPropagation();\n            event.preventDefault();\n        },\n        hide() {\n            this.$emit('before-hide');\n            this.visible = false;\n            this.activeItemPath = [];\n            this.focusedItemInfo = { index: -1, level: 0, parentKey: '' };\n        },\n        onFocus(event) {\n            this.focused = true;\n            this.focusedItemInfo = this.focusedItemInfo.index !== -1 ? this.focusedItemInfo : { index: -1, level: 0, parentKey: '' };\n            this.$emit('focus', event);\n        },\n        onBlur(event) {\n            this.focused = false;\n            this.focusedItemInfo = { index: -1, level: 0, parentKey: '' };\n            this.searchValue = '';\n            this.$emit('blur', event);\n        },\n        onKeyDown(event) {\n            const metaKey = event.metaKey || event.ctrlKey;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'ArrowLeft':\n                    this.onArrowLeftKey(event);\n                    break;\n\n                case 'ArrowRight':\n                    this.onArrowRightKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'Space':\n                    this.onSpaceKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                case 'Tab':\n                    this.onTabKey(event);\n                    break;\n\n                case 'PageDown':\n                case 'PageUp':\n                case 'Backspace':\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    //NOOP\n                    break;\n\n                default:\n                    if (!metaKey && isPrintableCharacter(event.key)) {\n                        this.searchItems(event, event.key);\n                    }\n\n                    break;\n            }\n        },\n        onItemChange(event) {\n            const { processedItem, isFocus } = event;\n\n            if (isEmpty(processedItem)) return;\n\n            const { index, key, level, parentKey, items } = processedItem;\n            const grouped = isNotEmpty(items);\n            const activeItemPath = this.activeItemPath.filter((p) => p.parentKey !== parentKey && p.parentKey !== key);\n\n            if (grouped) {\n                activeItemPath.push(processedItem);\n                this.submenuVisible = true;\n            }\n\n            this.focusedItemInfo = { index, level, parentKey };\n            this.activeItemPath = activeItemPath;\n\n            isFocus && focus(this.list);\n        },\n        onItemClick(event) {\n            const { processedItem } = event;\n            const grouped = this.isProccessedItemGroup(processedItem);\n            const selected = this.isSelected(processedItem);\n\n            if (selected) {\n                const { index, key, level, parentKey } = processedItem;\n\n                this.activeItemPath = this.activeItemPath.filter((p) => key !== p.key && key.startsWith(p.key));\n                this.focusedItemInfo = { index, level, parentKey };\n\n                focus(this.list);\n            } else {\n                grouped ? this.onItemChange(event) : this.hide();\n            }\n        },\n        onItemMouseEnter(event) {\n            this.onItemChange(event);\n        },\n        onItemMouseMove(event) {\n            if (this.focused) {\n                this.changeFocusedItemIndex(event, event.processedItem.index);\n            }\n        },\n        onArrowDownKey(event) {\n            const itemIndex = this.focusedItemInfo.index !== -1 ? this.findNextItemIndex(this.focusedItemInfo.index) : this.findFirstFocusedItemIndex();\n\n            this.changeFocusedItemIndex(event, itemIndex);\n            event.preventDefault();\n        },\n        onArrowUpKey(event) {\n            if (event.altKey) {\n                if (this.focusedItemInfo.index !== -1) {\n                    const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                    const grouped = this.isProccessedItemGroup(processedItem);\n\n                    !grouped && this.onItemChange({ originalEvent: event, processedItem });\n                }\n\n                this.popup && this.hide();\n                event.preventDefault();\n            } else {\n                const itemIndex = this.focusedItemInfo.index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo.index) : this.findLastFocusedItemIndex();\n\n                this.changeFocusedItemIndex(event, itemIndex);\n                event.preventDefault();\n            }\n        },\n        onArrowLeftKey(event) {\n            const processedItem = this.visibleItems[this.focusedItemInfo.index];\n            const parentItem = this.activeItemPath.find((p) => p.key === processedItem.parentKey);\n            const root = isEmpty(processedItem.parent);\n\n            if (!root) {\n                this.focusedItemInfo = { index: -1, parentKey: parentItem ? parentItem.parentKey : '' };\n                this.searchValue = '';\n                this.onArrowDownKey(event);\n            }\n\n            this.activeItemPath = this.activeItemPath.filter((p) => p.parentKey !== this.focusedItemInfo.parentKey);\n\n            event.preventDefault();\n        },\n        onArrowRightKey(event) {\n            const processedItem = this.visibleItems[this.focusedItemInfo.index];\n            const grouped = this.isProccessedItemGroup(processedItem);\n\n            if (grouped) {\n                this.onItemChange({ originalEvent: event, processedItem });\n                this.focusedItemInfo = { index: -1, parentKey: processedItem.key };\n                this.searchValue = '';\n                this.onArrowDownKey(event);\n            }\n\n            event.preventDefault();\n        },\n        onHomeKey(event) {\n            this.changeFocusedItemIndex(event, this.findFirstItemIndex());\n            event.preventDefault();\n        },\n        onEndKey(event) {\n            this.changeFocusedItemIndex(event, this.findLastItemIndex());\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (this.focusedItemInfo.index !== -1) {\n                const element = findSingle(this.list, `li[id=\"${`${this.focusedItemIdx}`}\"]`);\n                const anchorElement = element && findSingle(element, 'a[data-pc-section=\"itemlink\"]');\n\n                anchorElement ? anchorElement.click() : element && element.click();\n                const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                !grouped && (this.focusedItemInfo.index = this.findFirstFocusedItemIndex());\n            }\n\n            event.preventDefault();\n        },\n        onSpaceKey(event) {\n            this.onEnterKey(event);\n        },\n        onEscapeKey(event) {\n            this.hide();\n            !this.popup && (this.focusedItemInfo.index = this.findFirstFocusedItemIndex());\n\n            event.preventDefault();\n        },\n        onTabKey(event) {\n            if (this.focusedItemInfo.index !== -1) {\n                const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                !grouped && this.onItemChange({ originalEvent: event, processedItem });\n            }\n\n            this.hide();\n        },\n        onEnter(el) {\n            addStyle(el, { position: 'absolute' });\n            this.position();\n\n            if (this.autoZIndex) {\n                ZIndex.set('menu', el, this.baseZIndex + this.$primevue.config.zIndex.menu);\n            }\n        },\n        onAfterEnter() {\n            this.bindOutsideClickListener();\n            this.bindResizeListener();\n\n            this.$emit('show');\n            focus(this.list);\n        },\n        onLeave() {\n            this.$emit('hide');\n            this.container = null;\n        },\n        onAfterLeave(el) {\n            if (this.autoZIndex) {\n                ZIndex.clear(el);\n            }\n\n            this.unbindOutsideClickListener();\n            this.unbindResizeListener();\n        },\n        position() {\n            let left = this.pageX + 1;\n            let top = this.pageY + 1;\n            let width = this.container.offsetParent ? this.container.offsetWidth : getHiddenElementOuterWidth(this.container);\n            let height = this.container.offsetParent ? this.container.offsetHeight : getHiddenElementOuterHeight(this.container);\n            let viewport = getViewport();\n\n            //flip\n            if (left + width - document.body.scrollLeft > viewport.width) {\n                left -= width;\n            }\n\n            //flip\n            if (top + height - document.body.scrollTop > viewport.height) {\n                top -= height;\n            }\n\n            //fit\n            if (left < document.body.scrollLeft) {\n                left = document.body.scrollLeft;\n            }\n\n            //fit\n            if (top < document.body.scrollTop) {\n                top = document.body.scrollTop;\n            }\n\n            this.container.style.left = left + 'px';\n            this.container.style.top = top + 'px';\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    const isOutsideContainer = this.container && !this.container.contains(event.target);\n                    const isOutsideTarget = this.visible ? !(this.target && (this.target === event.target || this.target.contains(event.target))) : true;\n\n                    if (isOutsideContainer && isOutsideTarget) {\n                        this.hide();\n                    }\n                };\n\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = () => {\n                    if (this.visible && !isTouchDevice()) {\n                        this.hide();\n                    }\n                };\n\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        bindDocumentContextMenuListener() {\n            if (!this.documentContextMenuListener) {\n                this.documentContextMenuListener = (event) => {\n                    event.button === 2 && this.show(event);\n                };\n\n                document.addEventListener('contextmenu', this.documentContextMenuListener);\n            }\n        },\n        unbindDocumentContextMenuListener() {\n            if (this.documentContextMenuListener) {\n                document.removeEventListener('contextmenu', this.documentContextMenuListener);\n                this.documentContextMenuListener = null;\n            }\n        },\n        isItemMatched(processedItem) {\n            return this.isValidItem(processedItem) && this.getProccessedItemLabel(processedItem)?.toLocaleLowerCase().startsWith(this.searchValue.toLocaleLowerCase());\n        },\n        isValidItem(processedItem) {\n            return !!processedItem && !this.isItemDisabled(processedItem.item) && !this.isItemSeparator(processedItem.item) && this.isItemVisible(processedItem.item);\n        },\n        isValidSelectedItem(processedItem) {\n            return this.isValidItem(processedItem) && this.isSelected(processedItem);\n        },\n        isSelected(processedItem) {\n            return this.activeItemPath.some((p) => p.key === processedItem.key);\n        },\n        findFirstItemIndex() {\n            return this.visibleItems.findIndex((processedItem) => this.isValidItem(processedItem));\n        },\n        findLastItemIndex() {\n            return findLastIndex(this.visibleItems, (processedItem) => this.isValidItem(processedItem));\n        },\n        findNextItemIndex(index) {\n            const matchedItemIndex = index < this.visibleItems.length - 1 ? this.visibleItems.slice(index + 1).findIndex((processedItem) => this.isValidItem(processedItem)) : -1;\n\n            return matchedItemIndex > -1 ? matchedItemIndex + index + 1 : index;\n        },\n        findPrevItemIndex(index) {\n            const matchedItemIndex = index > 0 ? findLastIndex(this.visibleItems.slice(0, index), (processedItem) => this.isValidItem(processedItem)) : -1;\n\n            return matchedItemIndex > -1 ? matchedItemIndex : index;\n        },\n        findSelectedItemIndex() {\n            return this.visibleItems.findIndex((processedItem) => this.isValidSelectedItem(processedItem));\n        },\n        findFirstFocusedItemIndex() {\n            const selectedIndex = this.findSelectedItemIndex();\n\n            return selectedIndex < 0 ? this.findFirstItemIndex() : selectedIndex;\n        },\n        findLastFocusedItemIndex() {\n            const selectedIndex = this.findSelectedItemIndex();\n\n            return selectedIndex < 0 ? this.findLastItemIndex() : selectedIndex;\n        },\n        searchItems(event, char) {\n            this.searchValue = (this.searchValue || '') + char;\n\n            let itemIndex = -1;\n            let matched = false;\n\n            if (this.focusedItemInfo.index !== -1) {\n                itemIndex = this.visibleItems.slice(this.focusedItemInfo.index).findIndex((processedItem) => this.isItemMatched(processedItem));\n                itemIndex = itemIndex === -1 ? this.visibleItems.slice(0, this.focusedItemInfo.index).findIndex((processedItem) => this.isItemMatched(processedItem)) : itemIndex + this.focusedItemInfo.index;\n            } else {\n                itemIndex = this.visibleItems.findIndex((processedItem) => this.isItemMatched(processedItem));\n            }\n\n            if (itemIndex !== -1) {\n                matched = true;\n            }\n\n            if (itemIndex === -1 && this.focusedItemInfo.index === -1) {\n                itemIndex = this.findFirstFocusedItemIndex();\n            }\n\n            if (itemIndex !== -1) {\n                this.changeFocusedItemIndex(event, itemIndex);\n            }\n\n            if (this.searchTimeout) {\n                clearTimeout(this.searchTimeout);\n            }\n\n            this.searchTimeout = setTimeout(() => {\n                this.searchValue = '';\n                this.searchTimeout = null;\n            }, 500);\n\n            return matched;\n        },\n        changeFocusedItemIndex(event, index) {\n            if (this.focusedItemInfo.index !== index) {\n                this.focusedItemInfo.index = index;\n                this.scrollInView();\n            }\n        },\n        scrollInView(index = -1) {\n            const id = index !== -1 ? `${this.id}_${index}` : this.focusedItemIdx;\n            const element = findSingle(this.list, `li[id=\"${id}\"]`);\n\n            if (element) {\n                element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'start' });\n            }\n        },\n        createProcessedItems(items, level = 0, parent = {}, parentKey = '') {\n            const processedItems = [];\n\n            items &&\n                items.forEach((item, index) => {\n                    const key = (parentKey !== '' ? parentKey + '_' : '') + index;\n                    const newItem = {\n                        item,\n                        index,\n                        level,\n                        key,\n                        parent,\n                        parentKey\n                    };\n\n                    newItem['items'] = this.createProcessedItems(item.items, level + 1, newItem, key);\n                    processedItems.push(newItem);\n                });\n\n            return processedItems;\n        },\n        containerRef(el) {\n            this.container = el;\n        },\n        listRef(el) {\n            this.list = el ? el.$el : undefined;\n        }\n    },\n    computed: {\n        processedItems() {\n            return this.createProcessedItems(this.model || []);\n        },\n        visibleItems() {\n            const processedItem = this.activeItemPath.find((p) => p.key === this.focusedItemInfo.parentKey);\n\n            return processedItem ? processedItem.items : this.processedItems;\n        },\n        focusedItemIdx() {\n            return this.focusedItemInfo.index !== -1 ? `${this.id}${isNotEmpty(this.focusedItemInfo.parentKey) ? '_' + this.focusedItemInfo.parentKey : ''}_${this.focusedItemInfo.index}` : null;\n        }\n    },\n    components: {\n        ContextMenuSub,\n        Portal\n    }\n};\n</script>\n", "<template>\n    <Portal :appendTo=\"appendTo\">\n        <transition name=\"p-contextmenu\" @enter=\"onEnter\" @after-enter=\"onAfterEnter\" @leave=\"onLeave\" @after-leave=\"onAfterLeave\" v-bind=\"ptm('transition')\">\n            <div v-if=\"visible\" :ref=\"containerRef\" :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n                <ContextMenuSub\n                    :ref=\"listRef\"\n                    :id=\"id + '_list'\"\n                    :class=\"cx('rootList')\"\n                    role=\"menubar\"\n                    :root=\"true\"\n                    :tabindex=\"tabindex\"\n                    aria-orientation=\"vertical\"\n                    :aria-activedescendant=\"focused ? focusedItemIdx : undefined\"\n                    :menuId=\"id\"\n                    :focusedItemId=\"focused ? focusedItemIdx : undefined\"\n                    :items=\"processedItems\"\n                    :templates=\"$slots\"\n                    :activeItemPath=\"activeItemPath\"\n                    :aria-labelledby=\"ariaLabelledby\"\n                    :aria-label=\"ariaLabel\"\n                    :level=\"0\"\n                    :visible=\"submenuVisible\"\n                    :pt=\"pt\"\n                    :unstyled=\"unstyled\"\n                    @focus=\"onFocus\"\n                    @blur=\"onBlur\"\n                    @keydown=\"onKeyDown\"\n                    @item-click=\"onItemClick\"\n                    @item-mouseenter=\"onItemMouseEnter\"\n                    @item-mousemove=\"onItemMouseMove\"\n                />\n            </div>\n        </transition>\n    </Portal>\n</template>\n\n<script>\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport { focus, findSingle, addStyle, getHiddenElementOuterWidth, getHiddenElementOuterHeight, getViewport, isTouchDevice } from '@primeuix/utils/dom';\nimport { resolve, isNotEmpty, isPrintableCharacter, isEmpty, findLastIndex } from '@primeuix/utils/object';\nimport { ZIndex } from '@primeuix/utils/zindex';\nimport Portal from 'primevue/portal';\nimport BaseContextMenu from './BaseContextMenu.vue';\nimport ContextMenuSub from './ContextMenuSub.vue';\n\nexport default {\n    name: 'ContextMenu',\n    extends: BaseContextMenu,\n    inheritAttrs: false,\n    emits: ['focus', 'blur', 'show', 'hide', 'before-show', 'before-hide'],\n    target: null,\n    outsideClickListener: null,\n    resizeListener: null,\n    documentContextMenuListener: null,\n    pageX: null,\n    pageY: null,\n    container: null,\n    list: null,\n    data() {\n        return {\n            id: this.$attrs.id,\n            focused: false,\n            focusedItemInfo: { index: -1, level: 0, parentKey: '' },\n            activeItemPath: [],\n            visible: false,\n            submenuVisible: false\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        activeItemPath(newPath) {\n            if (isNotEmpty(newPath)) {\n                this.bindOutsideClickListener();\n                this.bindResizeListener();\n            } else if (!this.visible) {\n                this.unbindOutsideClickListener();\n                this.unbindResizeListener();\n            }\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n\n        if (this.global) {\n            this.bindDocumentContextMenuListener();\n        }\n    },\n    beforeUnmount() {\n        this.unbindResizeListener();\n        this.unbindOutsideClickListener();\n        this.unbindDocumentContextMenuListener();\n\n        if (this.container && this.autoZIndex) {\n            ZIndex.clear(this.container);\n        }\n\n        this.target = null;\n        this.container = null;\n    },\n    methods: {\n        getItemProp(item, name) {\n            return item ? resolve(item[name]) : undefined;\n        },\n        getItemLabel(item) {\n            return this.getItemProp(item, 'label');\n        },\n        isItemDisabled(item) {\n            return this.getItemProp(item, 'disabled');\n        },\n        isItemVisible(item) {\n            return this.getItemProp(item, 'visible') !== false;\n        },\n        isItemGroup(item) {\n            return isNotEmpty(this.getItemProp(item, 'items'));\n        },\n        isItemSeparator(item) {\n            return this.getItemProp(item, 'separator');\n        },\n        getProccessedItemLabel(processedItem) {\n            return processedItem ? this.getItemLabel(processedItem.item) : undefined;\n        },\n        isProccessedItemGroup(processedItem) {\n            return processedItem && isNotEmpty(processedItem.items);\n        },\n        toggle(event) {\n            this.visible ? this.hide() : this.show(event);\n        },\n        show(event) {\n            this.$emit('before-show');\n            this.activeItemPath = [];\n            this.focusedItemInfo = { index: -1, level: 0, parentKey: '' };\n            focus(this.list);\n\n            this.pageX = event.pageX;\n            this.pageY = event.pageY;\n            this.visible ? this.position() : (this.visible = true);\n\n            event.stopPropagation();\n            event.preventDefault();\n        },\n        hide() {\n            this.$emit('before-hide');\n            this.visible = false;\n            this.activeItemPath = [];\n            this.focusedItemInfo = { index: -1, level: 0, parentKey: '' };\n        },\n        onFocus(event) {\n            this.focused = true;\n            this.focusedItemInfo = this.focusedItemInfo.index !== -1 ? this.focusedItemInfo : { index: -1, level: 0, parentKey: '' };\n            this.$emit('focus', event);\n        },\n        onBlur(event) {\n            this.focused = false;\n            this.focusedItemInfo = { index: -1, level: 0, parentKey: '' };\n            this.searchValue = '';\n            this.$emit('blur', event);\n        },\n        onKeyDown(event) {\n            const metaKey = event.metaKey || event.ctrlKey;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'ArrowLeft':\n                    this.onArrowLeftKey(event);\n                    break;\n\n                case 'ArrowRight':\n                    this.onArrowRightKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'Space':\n                    this.onSpaceKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                case 'Tab':\n                    this.onTabKey(event);\n                    break;\n\n                case 'PageDown':\n                case 'PageUp':\n                case 'Backspace':\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    //NOOP\n                    break;\n\n                default:\n                    if (!metaKey && isPrintableCharacter(event.key)) {\n                        this.searchItems(event, event.key);\n                    }\n\n                    break;\n            }\n        },\n        onItemChange(event) {\n            const { processedItem, isFocus } = event;\n\n            if (isEmpty(processedItem)) return;\n\n            const { index, key, level, parentKey, items } = processedItem;\n            const grouped = isNotEmpty(items);\n            const activeItemPath = this.activeItemPath.filter((p) => p.parentKey !== parentKey && p.parentKey !== key);\n\n            if (grouped) {\n                activeItemPath.push(processedItem);\n                this.submenuVisible = true;\n            }\n\n            this.focusedItemInfo = { index, level, parentKey };\n            this.activeItemPath = activeItemPath;\n\n            isFocus && focus(this.list);\n        },\n        onItemClick(event) {\n            const { processedItem } = event;\n            const grouped = this.isProccessedItemGroup(processedItem);\n            const selected = this.isSelected(processedItem);\n\n            if (selected) {\n                const { index, key, level, parentKey } = processedItem;\n\n                this.activeItemPath = this.activeItemPath.filter((p) => key !== p.key && key.startsWith(p.key));\n                this.focusedItemInfo = { index, level, parentKey };\n\n                focus(this.list);\n            } else {\n                grouped ? this.onItemChange(event) : this.hide();\n            }\n        },\n        onItemMouseEnter(event) {\n            this.onItemChange(event);\n        },\n        onItemMouseMove(event) {\n            if (this.focused) {\n                this.changeFocusedItemIndex(event, event.processedItem.index);\n            }\n        },\n        onArrowDownKey(event) {\n            const itemIndex = this.focusedItemInfo.index !== -1 ? this.findNextItemIndex(this.focusedItemInfo.index) : this.findFirstFocusedItemIndex();\n\n            this.changeFocusedItemIndex(event, itemIndex);\n            event.preventDefault();\n        },\n        onArrowUpKey(event) {\n            if (event.altKey) {\n                if (this.focusedItemInfo.index !== -1) {\n                    const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                    const grouped = this.isProccessedItemGroup(processedItem);\n\n                    !grouped && this.onItemChange({ originalEvent: event, processedItem });\n                }\n\n                this.popup && this.hide();\n                event.preventDefault();\n            } else {\n                const itemIndex = this.focusedItemInfo.index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo.index) : this.findLastFocusedItemIndex();\n\n                this.changeFocusedItemIndex(event, itemIndex);\n                event.preventDefault();\n            }\n        },\n        onArrowLeftKey(event) {\n            const processedItem = this.visibleItems[this.focusedItemInfo.index];\n            const parentItem = this.activeItemPath.find((p) => p.key === processedItem.parentKey);\n            const root = isEmpty(processedItem.parent);\n\n            if (!root) {\n                this.focusedItemInfo = { index: -1, parentKey: parentItem ? parentItem.parentKey : '' };\n                this.searchValue = '';\n                this.onArrowDownKey(event);\n            }\n\n            this.activeItemPath = this.activeItemPath.filter((p) => p.parentKey !== this.focusedItemInfo.parentKey);\n\n            event.preventDefault();\n        },\n        onArrowRightKey(event) {\n            const processedItem = this.visibleItems[this.focusedItemInfo.index];\n            const grouped = this.isProccessedItemGroup(processedItem);\n\n            if (grouped) {\n                this.onItemChange({ originalEvent: event, processedItem });\n                this.focusedItemInfo = { index: -1, parentKey: processedItem.key };\n                this.searchValue = '';\n                this.onArrowDownKey(event);\n            }\n\n            event.preventDefault();\n        },\n        onHomeKey(event) {\n            this.changeFocusedItemIndex(event, this.findFirstItemIndex());\n            event.preventDefault();\n        },\n        onEndKey(event) {\n            this.changeFocusedItemIndex(event, this.findLastItemIndex());\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (this.focusedItemInfo.index !== -1) {\n                const element = findSingle(this.list, `li[id=\"${`${this.focusedItemIdx}`}\"]`);\n                const anchorElement = element && findSingle(element, 'a[data-pc-section=\"itemlink\"]');\n\n                anchorElement ? anchorElement.click() : element && element.click();\n                const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                !grouped && (this.focusedItemInfo.index = this.findFirstFocusedItemIndex());\n            }\n\n            event.preventDefault();\n        },\n        onSpaceKey(event) {\n            this.onEnterKey(event);\n        },\n        onEscapeKey(event) {\n            this.hide();\n            !this.popup && (this.focusedItemInfo.index = this.findFirstFocusedItemIndex());\n\n            event.preventDefault();\n        },\n        onTabKey(event) {\n            if (this.focusedItemInfo.index !== -1) {\n                const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                !grouped && this.onItemChange({ originalEvent: event, processedItem });\n            }\n\n            this.hide();\n        },\n        onEnter(el) {\n            addStyle(el, { position: 'absolute' });\n            this.position();\n\n            if (this.autoZIndex) {\n                ZIndex.set('menu', el, this.baseZIndex + this.$primevue.config.zIndex.menu);\n            }\n        },\n        onAfterEnter() {\n            this.bindOutsideClickListener();\n            this.bindResizeListener();\n\n            this.$emit('show');\n            focus(this.list);\n        },\n        onLeave() {\n            this.$emit('hide');\n            this.container = null;\n        },\n        onAfterLeave(el) {\n            if (this.autoZIndex) {\n                ZIndex.clear(el);\n            }\n\n            this.unbindOutsideClickListener();\n            this.unbindResizeListener();\n        },\n        position() {\n            let left = this.pageX + 1;\n            let top = this.pageY + 1;\n            let width = this.container.offsetParent ? this.container.offsetWidth : getHiddenElementOuterWidth(this.container);\n            let height = this.container.offsetParent ? this.container.offsetHeight : getHiddenElementOuterHeight(this.container);\n            let viewport = getViewport();\n\n            //flip\n            if (left + width - document.body.scrollLeft > viewport.width) {\n                left -= width;\n            }\n\n            //flip\n            if (top + height - document.body.scrollTop > viewport.height) {\n                top -= height;\n            }\n\n            //fit\n            if (left < document.body.scrollLeft) {\n                left = document.body.scrollLeft;\n            }\n\n            //fit\n            if (top < document.body.scrollTop) {\n                top = document.body.scrollTop;\n            }\n\n            this.container.style.left = left + 'px';\n            this.container.style.top = top + 'px';\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    const isOutsideContainer = this.container && !this.container.contains(event.target);\n                    const isOutsideTarget = this.visible ? !(this.target && (this.target === event.target || this.target.contains(event.target))) : true;\n\n                    if (isOutsideContainer && isOutsideTarget) {\n                        this.hide();\n                    }\n                };\n\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = () => {\n                    if (this.visible && !isTouchDevice()) {\n                        this.hide();\n                    }\n                };\n\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        bindDocumentContextMenuListener() {\n            if (!this.documentContextMenuListener) {\n                this.documentContextMenuListener = (event) => {\n                    event.button === 2 && this.show(event);\n                };\n\n                document.addEventListener('contextmenu', this.documentContextMenuListener);\n            }\n        },\n        unbindDocumentContextMenuListener() {\n            if (this.documentContextMenuListener) {\n                document.removeEventListener('contextmenu', this.documentContextMenuListener);\n                this.documentContextMenuListener = null;\n            }\n        },\n        isItemMatched(processedItem) {\n            return this.isValidItem(processedItem) && this.getProccessedItemLabel(processedItem)?.toLocaleLowerCase().startsWith(this.searchValue.toLocaleLowerCase());\n        },\n        isValidItem(processedItem) {\n            return !!processedItem && !this.isItemDisabled(processedItem.item) && !this.isItemSeparator(processedItem.item) && this.isItemVisible(processedItem.item);\n        },\n        isValidSelectedItem(processedItem) {\n            return this.isValidItem(processedItem) && this.isSelected(processedItem);\n        },\n        isSelected(processedItem) {\n            return this.activeItemPath.some((p) => p.key === processedItem.key);\n        },\n        findFirstItemIndex() {\n            return this.visibleItems.findIndex((processedItem) => this.isValidItem(processedItem));\n        },\n        findLastItemIndex() {\n            return findLastIndex(this.visibleItems, (processedItem) => this.isValidItem(processedItem));\n        },\n        findNextItemIndex(index) {\n            const matchedItemIndex = index < this.visibleItems.length - 1 ? this.visibleItems.slice(index + 1).findIndex((processedItem) => this.isValidItem(processedItem)) : -1;\n\n            return matchedItemIndex > -1 ? matchedItemIndex + index + 1 : index;\n        },\n        findPrevItemIndex(index) {\n            const matchedItemIndex = index > 0 ? findLastIndex(this.visibleItems.slice(0, index), (processedItem) => this.isValidItem(processedItem)) : -1;\n\n            return matchedItemIndex > -1 ? matchedItemIndex : index;\n        },\n        findSelectedItemIndex() {\n            return this.visibleItems.findIndex((processedItem) => this.isValidSelectedItem(processedItem));\n        },\n        findFirstFocusedItemIndex() {\n            const selectedIndex = this.findSelectedItemIndex();\n\n            return selectedIndex < 0 ? this.findFirstItemIndex() : selectedIndex;\n        },\n        findLastFocusedItemIndex() {\n            const selectedIndex = this.findSelectedItemIndex();\n\n            return selectedIndex < 0 ? this.findLastItemIndex() : selectedIndex;\n        },\n        searchItems(event, char) {\n            this.searchValue = (this.searchValue || '') + char;\n\n            let itemIndex = -1;\n            let matched = false;\n\n            if (this.focusedItemInfo.index !== -1) {\n                itemIndex = this.visibleItems.slice(this.focusedItemInfo.index).findIndex((processedItem) => this.isItemMatched(processedItem));\n                itemIndex = itemIndex === -1 ? this.visibleItems.slice(0, this.focusedItemInfo.index).findIndex((processedItem) => this.isItemMatched(processedItem)) : itemIndex + this.focusedItemInfo.index;\n            } else {\n                itemIndex = this.visibleItems.findIndex((processedItem) => this.isItemMatched(processedItem));\n            }\n\n            if (itemIndex !== -1) {\n                matched = true;\n            }\n\n            if (itemIndex === -1 && this.focusedItemInfo.index === -1) {\n                itemIndex = this.findFirstFocusedItemIndex();\n            }\n\n            if (itemIndex !== -1) {\n                this.changeFocusedItemIndex(event, itemIndex);\n            }\n\n            if (this.searchTimeout) {\n                clearTimeout(this.searchTimeout);\n            }\n\n            this.searchTimeout = setTimeout(() => {\n                this.searchValue = '';\n                this.searchTimeout = null;\n            }, 500);\n\n            return matched;\n        },\n        changeFocusedItemIndex(event, index) {\n            if (this.focusedItemInfo.index !== index) {\n                this.focusedItemInfo.index = index;\n                this.scrollInView();\n            }\n        },\n        scrollInView(index = -1) {\n            const id = index !== -1 ? `${this.id}_${index}` : this.focusedItemIdx;\n            const element = findSingle(this.list, `li[id=\"${id}\"]`);\n\n            if (element) {\n                element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'start' });\n            }\n        },\n        createProcessedItems(items, level = 0, parent = {}, parentKey = '') {\n            const processedItems = [];\n\n            items &&\n                items.forEach((item, index) => {\n                    const key = (parentKey !== '' ? parentKey + '_' : '') + index;\n                    const newItem = {\n                        item,\n                        index,\n                        level,\n                        key,\n                        parent,\n                        parentKey\n                    };\n\n                    newItem['items'] = this.createProcessedItems(item.items, level + 1, newItem, key);\n                    processedItems.push(newItem);\n                });\n\n            return processedItems;\n        },\n        containerRef(el) {\n            this.container = el;\n        },\n        listRef(el) {\n            this.list = el ? el.$el : undefined;\n        }\n    },\n    computed: {\n        processedItems() {\n            return this.createProcessedItems(this.model || []);\n        },\n        visibleItems() {\n            const processedItem = this.activeItemPath.find((p) => p.key === this.focusedItemInfo.parentKey);\n\n            return processedItem ? processedItem.items : this.processedItems;\n        },\n        focusedItemIdx() {\n            return this.focusedItemInfo.index !== -1 ? `${this.id}${isNotEmpty(this.focusedItemInfo.parentKey) ? '_' + this.focusedItemInfo.parentKey : ''}_${this.focusedItemInfo.index}` : null;\n        }\n    },\n    components: {\n        ContextMenuSub,\n        Portal\n    }\n};\n</script>\n"],
  "mappings": "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",
  "names": ["theme", "_ref", "dt", "concat", "classes", "root", "rootList", "item", "_ref2", "instance", "processedItem", "isItemActive", "isItemFocused", "isItemDisabled", "itemContent", "itemLink", "itemIcon", "itemLabel", "submenuIcon", "submenu", "separator", "BaseStyle", "extend", "name", "name", "BaseComponent", "props", "model", "type", "Array", "appendTo", "String", "Object", "autoZIndex", "Boolean", "baseZIndex", "Number", "global", "tabindex", "ariaLabelledby", "ariaLabel", "style", "ContextMenuStyle", "provide", "$pcContextMenu", "$parentInstance", "hostName", "emits", "items", "menuId", "focusedItemId", "root", "visible", "level", "templates", "activeItemPath", "methods", "getItemId", "processedItem", "concat", "key", "getItemKey", "getItemProp", "params", "item", "resolve", "undefined", "getItemLabel", "getItemLabelId", "getPTOptions", "index", "ptm", "context", "active", "isItemActive", "focused", "isItemFocused", "disabled", "isItemDisabled", "some", "path", "isItemVisible", "isItemGroup", "isNotEmpty", "onItemClick", "event", "originalEvent", "$emit", "isFocus", "onItemMouseEnter", "onItemMouseMove", "getAriaSetSize", "_this", "filter", "length", "getAriaPosInset", "_this2", "slice", "onEnter", "nestedPosition", "$refs", "container", "getMenuItemProps", "action", "mergeProps", "cx", "icon", "label", "submenuicon", "components", "AngleRightIcon", "directives", "ripple", "Ripple", "_openBlock", "_createBlock", "_Transition", "_mergeProps", "$options", "_ctx", "$props", "_createElementBlock", "ref", "_Fragment", "_renderList", "id", "role", "_createElementVNode", "onClick", "$event", "onMouseenter", "onMousemove", "_withDirectives", "href", "target", "itemicon", "_resolveDynamicComponent", "_toDisplayString", "_hoisted_5", "_component_AngleRightIcon", "hasSubmenu", "_component_ContextMenuSub", "pt", "unstyled", "_cache", "onItemMouseenter", "onItemMousemove", "_hoisted_6", "script", "BaseContextMenu", "inheritAttrs", "outsideClickListener", "resizeListener", "documentContextMenuListener", "pageX", "pageY", "list", "data", "$attrs", "focusedItemInfo", "parentKey", "submenuVisible", "watch", "$attrsId", "newValue", "UniqueComponentId", "newPath", "bindOutsideClickListener", "bindResizeListener", "unbindOutsideClickListener", "unbindResizeListener", "mounted", "bindDocumentContextMenuListener", "beforeUnmount", "unbindDocumentContextMenuListener", "ZIndex", "clear", "isItemSeparator", "getProccessedItemLabel", "isProccessedItemGroup", "toggle", "hide", "show", "focus", "position", "stopPropagation", "preventDefault", "onFocus", "onBlur", "searchValue", "onKeyDown", "metaKey", "ctrlKey", "code", "onArrowDownKey", "onArrowUpKey", "onArrowLeftKey", "onArrowRightKey", "onHomeKey", "onEndKey", "onSpaceKey", "onEnterKey", "onEscapeKey", "onTabKey", "isPrintableCharacter", "searchItems", "onItemChange", "isEmpty", "grouped", "p", "push", "selected", "isSelected", "startsWith", "changeFocusedItemIndex", "itemIndex", "findNextItemIndex", "findFirstFocusedItemIndex", "altKey", "visibleItems", "popup", "findPrevItemIndex", "findLastFocusedItemIndex", "parentItem", "find", "parent", "findFirstItemIndex", "findLastItemIndex", "element", "findSingle", "focusedItemIdx", "anchorElement", "click", "el", "addStyle", "set", "$primevue", "config", "zIndex", "menu", "onAfterEnter", "onLeave", "onAfterLeave", "left", "top", "width", "offsetParent", "offsetWidth", "getHiddenElementOuterWidth", "height", "offsetHeight", "getHiddenElementOuterHeight", "viewport", "getViewport", "document", "body", "scrollLeft", "scrollTop", "isOutsideContainer", "contains", "isOutsideTarget", "addEventListener", "removeEventListener", "_this3", "isTouchDevice", "window", "_this4", "button", "isItemMatched", "_this$getProccessedIt", "isValidItem", "toLocaleLowerCase", "isValidSelectedItem", "_this5", "findIndex", "_this6", "findLastIndex", "_this7", "matchedItemIndex", "_this8", "findSelectedItemIndex", "_this9", "selectedIndex", "char", "_this10", "matched", "searchTimeout", "clearTimeout", "setTimeout", "scrollInView", "scrollIntoView", "block", "inline", "createProcessedItems", "_this11", "arguments", "processedItems", "forEach", "newItem", "containerRef", "listRef", "$el", "computed", "_this12", "ContextMenuSub", "Portal", "_component_Portal", "_createVNode", "$data", "ptmi", "$slots", "onKeydown"]
}
