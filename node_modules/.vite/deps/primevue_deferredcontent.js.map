{
  "version": 3,
  "sources": ["../../src/deferredcontent/style/DeferredContentStyle.js", "../../src/deferredcontent/DeferredContent.vue", "../../src/deferredcontent/DeferredContent.vue?vue&type=template&id=a323cf8a&lang.js"],
  "sourcesContent": ["import BaseStyle from '@primevue/core/base/style';\n\nexport default BaseStyle.extend({\n    name: 'deferredcontent'\n});\n", "<template>\n    <div ref=\"container\" v-bind=\"ptmi('root')\">\n        <slot v-if=\"loaded\"></slot>\n    </div>\n</template>\n\n<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport DeferredContentStyle from 'primevue/deferredcontent/style';\n\nexport default {\n    name: 'DeferredContent',\n    extends: BaseComponent,\n    inheritAttrs: false,\n    emits: ['load'],\n    style: DeferredContentStyle,\n    data() {\n        return {\n            loaded: false\n        };\n    },\n    mounted() {\n        if (!this.loaded) {\n            if (this.shouldLoad()) this.load();\n            else this.bindScrollListener();\n        }\n    },\n    beforeUnmount() {\n        this.unbindScrollListener();\n    },\n    methods: {\n        bindScrollListener() {\n            this.documentScrollListener = () => {\n                if (this.shouldLoad()) {\n                    this.load();\n                    this.unbindScrollListener();\n                }\n            };\n\n            window.addEventListener('scroll', this.documentScrollListener);\n        },\n        unbindScrollListener() {\n            if (this.documentScrollListener) {\n                window.removeEventListener('scroll', this.documentScrollListener);\n                this.documentScrollListener = null;\n            }\n        },\n        shouldLoad() {\n            if (this.loaded) {\n                return false;\n            } else {\n                const rect = this.$refs.container.getBoundingClientRect();\n                const docElement = document.documentElement;\n                const winHeight = docElement.clientHeight;\n\n                return winHeight >= rect.top;\n            }\n        },\n        load(event) {\n            this.loaded = true;\n            this.$emit('load', event);\n        }\n    }\n};\n</script>\n", "<template>\n    <div ref=\"container\" v-bind=\"ptmi('root')\">\n        <slot v-if=\"loaded\"></slot>\n    </div>\n</template>\n\n<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport DeferredContentStyle from 'primevue/deferredcontent/style';\n\nexport default {\n    name: 'DeferredContent',\n    extends: BaseComponent,\n    inheritAttrs: false,\n    emits: ['load'],\n    style: DeferredContentStyle,\n    data() {\n        return {\n            loaded: false\n        };\n    },\n    mounted() {\n        if (!this.loaded) {\n            if (this.shouldLoad()) this.load();\n            else this.bindScrollListener();\n        }\n    },\n    beforeUnmount() {\n        this.unbindScrollListener();\n    },\n    methods: {\n        bindScrollListener() {\n            this.documentScrollListener = () => {\n                if (this.shouldLoad()) {\n                    this.load();\n                    this.unbindScrollListener();\n                }\n            };\n\n            window.addEventListener('scroll', this.documentScrollListener);\n        },\n        unbindScrollListener() {\n            if (this.documentScrollListener) {\n                window.removeEventListener('scroll', this.documentScrollListener);\n                this.documentScrollListener = null;\n            }\n        },\n        shouldLoad() {\n            if (this.loaded) {\n                return false;\n            } else {\n                const rect = this.$refs.container.getBoundingClientRect();\n                const docElement = document.documentElement;\n                const winHeight = docElement.clientHeight;\n\n                return winHeight >= rect.top;\n            }\n        },\n        load(event) {\n            this.loaded = true;\n            this.$emit('load', event);\n        }\n    }\n};\n</script>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAEA,IAAA,uBAAeA,UAAUC,OAAO;EAC5BC,MAAM;AACV,CAAC;;;ACMD,IAAAC,UAAe;EACXC,MAAM;EACN,WAASC;EACTC,cAAc;EACdC,OAAO,CAAC,MAAM;EACdC,OAAOC;EACPC,MAAI,SAAAA,OAAG;AACH,WAAO;MACHC,QAAQ;;;EAGhBC,SAAO,SAAAA,UAAG;AACN,QAAI,CAAC,KAAKD,QAAQ;AACd,UAAI,KAAKE,WAAU;AAAI,aAAKC,KAAI;;AAC3B,aAAKC,mBAAkB;IAChC;;EAEJC,eAAa,SAAAA,gBAAG;AACZ,SAAKC,qBAAoB;;EAE7BC,SAAS;IACLH,oBAAkB,SAAAA,qBAAG;AAAA,UAAAI,QAAA;AACjB,WAAKC,yBAAyB,WAAM;AAChC,YAAID,MAAKN,WAAU,GAAI;AACnBM,gBAAKL,KAAI;AACTK,gBAAKF,qBAAoB;QAC7B;;AAGJI,aAAOC,iBAAiB,UAAU,KAAKF,sBAAsB;;IAEjEH,sBAAoB,SAAAA,uBAAG;AACnB,UAAI,KAAKG,wBAAwB;AAC7BC,eAAOE,oBAAoB,UAAU,KAAKH,sBAAsB;AAChE,aAAKA,yBAAyB;MAClC;;IAEJP,YAAU,SAAAA,aAAG;AACT,UAAI,KAAKF,QAAQ;AACb,eAAO;MACX,OAAO;AACH,YAAMa,OAAO,KAAKC,MAAMC,UAAUC,sBAAqB;AACvD,YAAMC,aAAaC,SAASC;AAC5B,YAAMC,YAAYH,WAAWI;AAE7B,eAAOD,aAAaP,KAAKS;MAC7B;;IAEJnB,MAAI,SAAAA,KAACoB,OAAO;AACR,WAAKvB,SAAS;AACd,WAAKwB,MAAM,QAAQD,KAAK;IAC5B;EACJ;AACJ;;AC9DI,SAAAE,UAAA,GAAAC,mBAEK,OAFLC,WAEK;IAFAC,KAAI;KAAoBC,KAAIC,KAAA,MAAA,CAAA,GAAA,CACjBC,MAAM/B,SAAlBgC,WAA0BH,KAAAI,QAAA,WAAA;IAAAC,KAAA;GAAA,IAAA,mBAAA,IAAA,IAAA,CAAA,GAAA,EAAA;;;",
  "names": ["BaseStyle", "extend", "name", "script", "name", "BaseComponent", "inheritAttrs", "emits", "style", "DeferredContentStyle", "data", "loaded", "mounted", "shouldLoad", "load", "bindScrollListener", "beforeUnmount", "unbindScrollListener", "methods", "_this", "documentScrollListener", "window", "addEventListener", "removeEventListener", "rect", "$refs", "container", "getBoundingClientRect", "docElement", "document", "documentElement", "winHeight", "clientHeight", "top", "event", "$emit", "_openBlock", "_createElementBlock", "_mergeProps", "ref", "_ctx", "ptmi", "$data", "_renderSlot", "$slots", "key"]
}
