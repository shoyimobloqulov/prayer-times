{
  "version": 3,
  "sources": ["../../src/inplace/style/InplaceStyle.js", "../../src/inplace/BaseInplace.vue", "../../src/inplace/Inplace.vue", "../../src/inplace/Inplace.vue?vue&type=template&id=541bf5a8&lang.js"],
  "sourcesContent": ["import BaseStyle from '@primevue/core/base/style';\n\nconst theme = ({ dt }) => `\n.p-inplace-display {\n    display: inline-block;\n    cursor: pointer;\n    border: 1px solid transparent;\n    padding: ${dt('inplace.padding')};\n    border-radius: ${dt('inplace.border.radius')};\n    transition: background ${dt('inplace.transition.duration')}, color ${dt('inplace.transition.duration')}, outline-color ${dt('inplace.transition.duration')}, box-shadow ${dt('inplace.transition.duration')};\n    outline-color: transparent;\n}\n\n.p-inplace-display:not(.p-disabled):hover {\n    background: ${dt('inplace.display.hover.background')};\n    color: ${dt('inplace.display.hover.color')};\n}\n\n.p-inplace-display:focus-visible {\n    box-shadow: ${dt('inplace.focus.ring.shadow')};\n    outline: ${dt('inplace.focus.ring.width')} ${dt('inplace.focus.ring.style')} ${dt('inplace.focus.ring.color')};\n    outline-offset: ${dt('inplace.focus.ring.offset')};\n}\n\n.p-inplace-content {\n    display: block;\n}\n`;\n\nconst classes = {\n    root: 'p-inplace p-component',\n    display: ({ props }) => ['p-inplace-display', { 'p-disabled': props.disabled }],\n    content: 'p-inplace-content'\n};\n\nexport default BaseStyle.extend({\n    name: 'inplace',\n    theme,\n    classes\n});\n", "<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport InplaceStyle from 'primevue/inplace/style';\n\nexport default {\n    name: 'BaseInplace',\n    extends: BaseComponent,\n    props: {\n        active: {\n            type: Boolean,\n            default: false\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        displayProps: {\n            type: null,\n            default: null\n        }\n    },\n    style: InplaceStyle,\n    provide() {\n        return {\n            $pcInplace: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n", "<template>\n    <div :class=\"cx('root')\" aria-live=\"polite\" v-bind=\"ptmi('root')\">\n        <div v-if=\"!d_active\" ref=\"display\" :class=\"cx('display')\" :tabindex=\"$attrs.tabindex || '0'\" role=\"button\" @click=\"open\" @keydown.enter=\"open\" v-bind=\"{ ...displayProps, ...ptm('display') }\">\n            <slot name=\"display\"></slot>\n        </div>\n        <div v-else :class=\"cx('content')\" v-bind=\"ptm('content')\">\n            <slot name=\"content\" :closeCallback=\"close\" />\n        </div>\n    </div>\n</template>\n\n<script>\nimport BaseInplace from './BaseInplace.vue';\n\nexport default {\n    name: 'Inplace',\n    extends: BaseInplace,\n    inheritAttrs: false,\n    emits: ['open', 'close', 'update:active'],\n    data() {\n        return {\n            d_active: this.active\n        };\n    },\n    watch: {\n        active(newValue) {\n            this.d_active = newValue;\n        }\n    },\n    methods: {\n        open(event) {\n            if (this.disabled) {\n                return;\n            }\n\n            this.d_active = true;\n\n            this.$emit('open', event);\n            this.$emit('update:active', true);\n        },\n        close(event) {\n            this.d_active = false;\n\n            this.$emit('close', event);\n            this.$emit('update:active', false);\n\n            setTimeout(() => {\n                this.$refs.display.focus();\n            }, 0);\n        }\n    }\n};\n</script>\n", "<template>\n    <div :class=\"cx('root')\" aria-live=\"polite\" v-bind=\"ptmi('root')\">\n        <div v-if=\"!d_active\" ref=\"display\" :class=\"cx('display')\" :tabindex=\"$attrs.tabindex || '0'\" role=\"button\" @click=\"open\" @keydown.enter=\"open\" v-bind=\"{ ...displayProps, ...ptm('display') }\">\n            <slot name=\"display\"></slot>\n        </div>\n        <div v-else :class=\"cx('content')\" v-bind=\"ptm('content')\">\n            <slot name=\"content\" :closeCallback=\"close\" />\n        </div>\n    </div>\n</template>\n\n<script>\nimport BaseInplace from './BaseInplace.vue';\n\nexport default {\n    name: 'Inplace',\n    extends: BaseInplace,\n    inheritAttrs: false,\n    emits: ['open', 'close', 'update:active'],\n    data() {\n        return {\n            d_active: this.active\n        };\n    },\n    watch: {\n        active(newValue) {\n            this.d_active = newValue;\n        }\n    },\n    methods: {\n        open(event) {\n            if (this.disabled) {\n                return;\n            }\n\n            this.d_active = true;\n\n            this.$emit('open', event);\n            this.$emit('update:active', true);\n        },\n        close(event) {\n            this.d_active = false;\n\n            this.$emit('close', event);\n            this.$emit('update:active', false);\n\n            setTimeout(() => {\n                this.$refs.display.focus();\n            }, 0);\n        }\n    }\n};\n</script>\n"],
  "mappings": "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",
  "names": ["theme", "_ref", "dt", "concat", "classes", "root", "display", "_ref2", "props", "disabled", "content", "BaseStyle", "extend", "name", "name", "BaseComponent", "props", "active", "type", "Boolean", "disabled", "displayProps", "style", "InplaceStyle", "provide", "$pcInplace", "$parentInstance", "script", "BaseInplace", "inheritAttrs", "emits", "data", "d_active", "watch", "newValue", "methods", "open", "event", "$emit", "close", "_this", "setTimeout", "$refs", "display", "focus", "_openBlock", "_createElementBlock", "_mergeProps", "_ctx", "cx", "ptmi", "$data", "ref", "tabindex", "$attrs", "role", "onClick", "$options", "apply", "arguments", "onKeydown", "_objectSpread", "ptm", "_renderSlot", "$slots", "closeCallback"]
}
