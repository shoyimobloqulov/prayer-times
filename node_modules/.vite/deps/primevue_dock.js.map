{
  "version": 3,
  "sources": ["../../src/dock/style/DockStyle.js", "../../src/dock/BaseDock.vue", "../../src/dock/DockSub.vue", "../../src/dock/DockSub.vue?vue&type=template&id=26495d0d&lang.js", "../../src/dock/Dock.vue", "../../src/dock/Dock.vue?vue&type=template&id=2f238c36&lang.js"],
  "sourcesContent": ["import BaseStyle from '@primevue/core/base/style';\n\nconst theme = ({ dt }) => `\n.p-dock {\n    position: absolute;\n    z-index: 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    pointer-events: none;\n}\n\n.p-dock-list-container {\n    display: flex;\n    pointer-events: auto;\n    background: ${dt('dock.background')};\n    border: 1px solid ${dt('dock.border.color')};\n    padding: ${dt('dock.padding')};\n    border-radius: ${dt('dock.border.radius')};\n}\n\n.p-dock-list {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    outline: 0 none;\n}\n\n.p-dock-item {\n    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n    will-change: transform;\n    padding: ${dt('dock.item.padding')};\n    border-radius: ${dt('dock.item.border.radius')};\n}\n\n.p-dock-item.p-focus {\n    box-shadow: ${dt('dock.item.focus.ring.shadow')};\n    outline: ${dt('dock.item.focus.ring.width')} ${dt('dock.item.focus.ring.style')} ${dt('dock.item.focus.ring.color')};\n    outline-offset: ${dt('dock.item.focus.ring.offset')};\n}\n\n.p-dock-item-link {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    overflow: hidden;\n    cursor: default;\n    width: ${dt('dock.item.size')};\n    height: ${dt('dock.item.size')};\n}\n\n.p-dock-top {\n    left: 0;\n    top: 0;\n    width: 100%;\n}\n\n.p-dock-top .p-dock-item {\n    transform-origin: center top;\n}\n\n.p-dock-bottom {\n    left: 0;\n    bottom: 0;\n    width: 100%;\n}\n\n.p-dock-bottom .p-dock-item {\n    transform-origin: center bottom;\n}\n\n.p-dock-right {\n    right: 0;\n    top: 0;\n    height: 100%;\n}\n\n.p-dock-right .p-dock-item {\n    transform-origin: center right;\n}\n\n.p-dock-right .p-dock-list {\n    flex-direction: column;\n}\n\n.p-dock-left {\n    left: 0;\n    top: 0;\n    height: 100%;\n}\n\n.p-dock-left .p-dock-item {\n    transform-origin: center left;\n}\n\n.p-dock-left .p-dock-list {\n    flex-direction: column;\n}\n\n.p-dock-mobile.p-dock-top .p-dock-list-container,\n.p-dock-mobile.p-dock-bottom .p-dock-list-container {\n    overflow-x: auto;\n    width: 100%;\n}\n.p-dock-mobile.p-dock-top .p-dock-list-container .p-dock-list,\n.p-dock-mobile.p-dock-bottom .p-dock-list-container .p-dock-list {\n    margin: 0 auto;\n}\n.p-dock-mobile.p-dock-left .p-dock-list-container,\n.p-dock-mobile.p-dock-right .p-dock-list-container {\n    overflow-y: auto;\n    height: 100%;\n}\n.p-dock-mobile.p-dock-left .p-dock-list-container .p-dock-list,\n.p-dock-mobile.p-dock-right .p-dock-list-container .p-dock-list {\n    margin: auto 0;\n}\n.p-dock-mobile .p-dock-list .p-dock-item {\n    transform: none;\n    margin: 0;\n}\n`;\n\nconst classes = {\n    root: ({ instance, props }) => [\n        'p-dock p-component',\n        `p-dock-${props.position}`,\n        {\n            'p-dock-mobile': instance.queryMatches\n        }\n    ],\n    listContainer: 'p-dock-list-container',\n    list: 'p-dock-list',\n    item: ({ instance, processedItem, id }) => [\n        'p-dock-item',\n        {\n            'p-focus': instance.isItemActive(id),\n            'p-disabled': instance.disabled(processedItem)\n        }\n    ],\n    itemContent: 'p-dock-item-content',\n    itemLink: 'p-dock-item-link',\n    itemIcon: 'p-dock-item-icon'\n};\n\nexport default BaseStyle.extend({\n    name: 'dock',\n    theme,\n    classes\n});\n", "<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport DockStyle from 'primevue/dock/style';\n\nexport default {\n    name: 'BaseDock',\n    extends: BaseComponent,\n    props: {\n        position: {\n            type: String,\n            default: 'bottom'\n        },\n        model: null,\n        class: null,\n        style: null,\n        tooltipOptions: null,\n        menuId: {\n            type: String,\n            default: null\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        },\n        breakpoint: {\n            type: String,\n            default: '960px'\n        },\n        ariaLabel: {\n            type: String,\n            default: null\n        },\n        ariaLabelledby: {\n            type: String,\n            default: null\n        }\n    },\n    style: DockStyle,\n    provide() {\n        return {\n            $pcDock: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n", "<template>\n    <div :class=\"cx('listContainer')\" v-bind=\"ptm('listContainer')\">\n        <ul\n            ref=\"list\"\n            :id=\"id\"\n            :class=\"cx('list')\"\n            role=\"menu\"\n            :aria-orientation=\"position === 'bottom' || position === 'top' ? 'horizontal' : 'vertical'\"\n            :aria-activedescendant=\"focused ? focusedOptionId : undefined\"\n            :tabindex=\"tabindex\"\n            :aria-label=\"ariaLabel\"\n            :aria-labelledby=\"ariaLabelledby\"\n            @focus=\"onListFocus\"\n            @blur=\"onListBlur\"\n            @keydown=\"onListKeyDown\"\n            @mouseleave=\"onListMouseLeave\"\n            v-bind=\"ptm('list')\"\n        >\n            <template v-for=\"(processedItem, index) of model\" :key=\"index\">\n                <li\n                    :id=\"getItemId(index)\"\n                    :class=\"cx('item', { processedItem, id: getItemId(index) })\"\n                    role=\"menuitem\"\n                    :aria-label=\"processedItem.label\"\n                    :aria-disabled=\"disabled(processedItem)\"\n                    @click=\"onItemClick($event, processedItem)\"\n                    @mouseenter=\"onItemMouseEnter(index)\"\n                    v-bind=\"getPTOptions('item', processedItem, index)\"\n                    :data-p-focused=\"isItemActive(getItemId(index))\"\n                    :data-p-disabled=\"disabled(processedItem) || false\"\n                >\n                    <div :class=\"cx('itemContent')\" v-bind=\"getPTOptions('itemContent', processedItem, index)\">\n                        <template v-if=\"!templates['item']\">\n                            <a\n                                v-tooltip:[tooltipOptions]=\"{ value: processedItem.label, disabled: !tooltipOptions }\"\n                                :href=\"processedItem.url\"\n                                :class=\"cx('itemLink')\"\n                                :target=\"processedItem.target\"\n                                tabindex=\"-1\"\n                                aria-hidden=\"true\"\n                                v-bind=\"getPTOptions('itemLink', processedItem, index)\"\n                            >\n                                <!-- TODO: icon deprecated since v4.0-->\n                                <template v-if=\"!templates['icon'] && !templates['itemicon']\">\n                                    <span v-ripple :class=\"[cx('itemIcon'), processedItem.icon]\" v-bind=\"getPTOptions('itemIcon', processedItem, index)\"></span>\n                                </template>\n                                <component v-else :is=\"templates['icon'] || templates['itemicon']\" :item=\"processedItem\" :class=\"cx('itemIcon')\"></component>\n                            </a>\n                        </template>\n                        <component v-else :is=\"templates['item']\" :item=\"processedItem\" :index=\"index\" :label=\"processedItem.label\" :props=\"getMenuItemProps(processedItem, index)\"></component>\n                    </div>\n                </li>\n            </template>\n        </ul>\n    </div>\n</template>\n\n<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport { find, findSingle } from '@primeuix/utils/dom';\nimport { resolve } from '@primeuix/utils/object';\nimport Ripple from 'primevue/ripple';\nimport Tooltip from 'primevue/tooltip';\nimport { mergeProps } from 'vue';\n\nexport default {\n    name: 'DockSub',\n    hostName: 'Dock',\n    extends: BaseComponent,\n    emits: ['focus', 'blur'],\n    props: {\n        position: {\n            type: String,\n            default: 'bottom'\n        },\n        model: {\n            type: Array,\n            default: null\n        },\n        templates: {\n            type: null,\n            default: null\n        },\n        tooltipOptions: null,\n        menuId: {\n            type: String,\n            default: null\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        },\n        ariaLabel: {\n            type: String,\n            default: null\n        },\n        ariaLabelledby: {\n            type: String,\n            default: null\n        }\n    },\n    data() {\n        return {\n            id: this.menuId,\n            currentIndex: -3,\n            focused: false,\n            focusedOptionIndex: -1\n        };\n    },\n    watch: {\n        menuId(newValue) {\n            this.id = newValue || UniqueComponentId();\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n    },\n    methods: {\n        getItemId(index) {\n            return `${this.id}_${index}`;\n        },\n        getItemProp(processedItem, name) {\n            return processedItem && processedItem.item ? resolve(processedItem.item[name]) : undefined;\n        },\n        getPTOptions(key, item, index) {\n            return this.ptm(key, {\n                context: {\n                    index,\n                    item,\n                    active: this.isItemActive(this.getItemId(index))\n                }\n            });\n        },\n        isSameMenuItem(event) {\n            return event.currentTarget && (event.currentTarget.isSameNode(event.target) || event.currentTarget.isSameNode(event.target.closest('[data-pc-section=\"item\"]')));\n        },\n        isItemActive(id) {\n            return id === this.focusedOptionIndex;\n        },\n        onListMouseLeave() {\n            this.currentIndex = -3;\n        },\n        onItemMouseEnter(index) {\n            this.currentIndex = index;\n        },\n        onItemClick(event, processedItem) {\n            if (this.isSameMenuItem(event)) {\n                const command = this.getItemProp(processedItem, 'command');\n\n                command && command({ originalEvent: event, item: processedItem.item });\n            }\n        },\n        onListFocus(event) {\n            this.focused = true;\n            this.changeFocusedOptionIndex(0);\n            this.$emit('focus', event);\n        },\n        onListBlur(event) {\n            this.focused = false;\n            this.focusedOptionIndex = -1;\n            this.$emit('blur', event);\n        },\n        onListKeyDown(event) {\n            switch (event.code) {\n                case 'ArrowDown': {\n                    if (this.position === 'left' || this.position === 'right') this.onArrowDownKey();\n                    event.preventDefault();\n                    break;\n                }\n\n                case 'ArrowUp': {\n                    if (this.position === 'left' || this.position === 'right') this.onArrowUpKey();\n                    event.preventDefault();\n                    break;\n                }\n\n                case 'ArrowRight': {\n                    if (this.position === 'top' || this.position === 'bottom') this.onArrowDownKey();\n                    event.preventDefault();\n                    break;\n                }\n\n                case 'ArrowLeft': {\n                    if (this.position === 'top' || this.position === 'bottom') this.onArrowUpKey();\n                    event.preventDefault();\n                    break;\n                }\n\n                case 'Home': {\n                    this.onHomeKey();\n                    event.preventDefault();\n                    break;\n                }\n\n                case 'End': {\n                    this.onEndKey();\n                    event.preventDefault();\n                    break;\n                }\n\n                case 'Enter':\n                case 'NumpadEnter':\n\n                case 'Space': {\n                    this.onSpaceKey(event);\n                    event.preventDefault();\n                    break;\n                }\n\n                default:\n                    break;\n            }\n        },\n        onArrowDownKey() {\n            const optionIndex = this.findNextOptionIndex(this.focusedOptionIndex);\n\n            this.changeFocusedOptionIndex(optionIndex);\n        },\n        onArrowUpKey() {\n            const optionIndex = this.findPrevOptionIndex(this.focusedOptionIndex);\n\n            this.changeFocusedOptionIndex(optionIndex);\n        },\n        onHomeKey() {\n            this.changeFocusedOptionIndex(0);\n        },\n        onEndKey() {\n            this.changeFocusedOptionIndex(find(this.$refs.list, 'li[data-pc-section=\"item\"][data-p-disabled=\"false\"]').length - 1);\n        },\n        onSpaceKey() {\n            const element = findSingle(this.$refs.list, `li[id=\"${`${this.focusedOptionIndex}`}\"]`);\n            const anchorElement = element && findSingle(element, '[data-pc-section=\"itemlink\"]');\n\n            anchorElement ? anchorElement.click() : element && element.click();\n        },\n        findNextOptionIndex(index) {\n            const menuitems = find(this.$refs.list, 'li[data-pc-section=\"item\"][data-p-disabled=\"false\"]');\n            const matchedOptionIndex = [...menuitems].findIndex((link) => link.id === index);\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex + 1 : 0;\n        },\n        findPrevOptionIndex(index) {\n            const menuitems = find(this.$refs.list, 'li[data-pc-section=\"item\"][data-p-disabled=\"false\"]');\n            const matchedOptionIndex = [...menuitems].findIndex((link) => link.id === index);\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex - 1 : 0;\n        },\n        changeFocusedOptionIndex(index) {\n            const menuitems = find(this.$refs.list, 'li[data-pc-section=\"item\"][data-p-disabled=\"false\"]');\n\n            let order = index >= menuitems.length ? menuitems.length - 1 : index < 0 ? 0 : index;\n\n            this.focusedOptionIndex = menuitems[order].getAttribute('id');\n        },\n        disabled(item) {\n            return typeof item.disabled === 'function' ? item.disabled() : item.disabled;\n        },\n        getMenuItemProps(item, index) {\n            return {\n                action: mergeProps(\n                    {\n                        tabindex: -1,\n                        'aria-hidden': true,\n                        class: this.cx('itemLink')\n                    },\n                    this.getPTOptions('itemLink', item, index)\n                ),\n                icon: mergeProps(\n                    {\n                        class: [this.cx('itemIcon'), item.icon]\n                    },\n                    this.getPTOptions('itemIcon', item, index)\n                )\n            };\n        }\n    },\n    computed: {\n        focusedOptionId() {\n            return this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : null;\n        }\n    },\n    directives: {\n        ripple: Ripple,\n        tooltip: Tooltip\n    }\n};\n</script>\n", "<template>\n    <div :class=\"cx('listContainer')\" v-bind=\"ptm('listContainer')\">\n        <ul\n            ref=\"list\"\n            :id=\"id\"\n            :class=\"cx('list')\"\n            role=\"menu\"\n            :aria-orientation=\"position === 'bottom' || position === 'top' ? 'horizontal' : 'vertical'\"\n            :aria-activedescendant=\"focused ? focusedOptionId : undefined\"\n            :tabindex=\"tabindex\"\n            :aria-label=\"ariaLabel\"\n            :aria-labelledby=\"ariaLabelledby\"\n            @focus=\"onListFocus\"\n            @blur=\"onListBlur\"\n            @keydown=\"onListKeyDown\"\n            @mouseleave=\"onListMouseLeave\"\n            v-bind=\"ptm('list')\"\n        >\n            <template v-for=\"(processedItem, index) of model\" :key=\"index\">\n                <li\n                    :id=\"getItemId(index)\"\n                    :class=\"cx('item', { processedItem, id: getItemId(index) })\"\n                    role=\"menuitem\"\n                    :aria-label=\"processedItem.label\"\n                    :aria-disabled=\"disabled(processedItem)\"\n                    @click=\"onItemClick($event, processedItem)\"\n                    @mouseenter=\"onItemMouseEnter(index)\"\n                    v-bind=\"getPTOptions('item', processedItem, index)\"\n                    :data-p-focused=\"isItemActive(getItemId(index))\"\n                    :data-p-disabled=\"disabled(processedItem) || false\"\n                >\n                    <div :class=\"cx('itemContent')\" v-bind=\"getPTOptions('itemContent', processedItem, index)\">\n                        <template v-if=\"!templates['item']\">\n                            <a\n                                v-tooltip:[tooltipOptions]=\"{ value: processedItem.label, disabled: !tooltipOptions }\"\n                                :href=\"processedItem.url\"\n                                :class=\"cx('itemLink')\"\n                                :target=\"processedItem.target\"\n                                tabindex=\"-1\"\n                                aria-hidden=\"true\"\n                                v-bind=\"getPTOptions('itemLink', processedItem, index)\"\n                            >\n                                <!-- TODO: icon deprecated since v4.0-->\n                                <template v-if=\"!templates['icon'] && !templates['itemicon']\">\n                                    <span v-ripple :class=\"[cx('itemIcon'), processedItem.icon]\" v-bind=\"getPTOptions('itemIcon', processedItem, index)\"></span>\n                                </template>\n                                <component v-else :is=\"templates['icon'] || templates['itemicon']\" :item=\"processedItem\" :class=\"cx('itemIcon')\"></component>\n                            </a>\n                        </template>\n                        <component v-else :is=\"templates['item']\" :item=\"processedItem\" :index=\"index\" :label=\"processedItem.label\" :props=\"getMenuItemProps(processedItem, index)\"></component>\n                    </div>\n                </li>\n            </template>\n        </ul>\n    </div>\n</template>\n\n<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport { find, findSingle } from '@primeuix/utils/dom';\nimport { resolve } from '@primeuix/utils/object';\nimport Ripple from 'primevue/ripple';\nimport Tooltip from 'primevue/tooltip';\nimport { mergeProps } from 'vue';\n\nexport default {\n    name: 'DockSub',\n    hostName: 'Dock',\n    extends: BaseComponent,\n    emits: ['focus', 'blur'],\n    props: {\n        position: {\n            type: String,\n            default: 'bottom'\n        },\n        model: {\n            type: Array,\n            default: null\n        },\n        templates: {\n            type: null,\n            default: null\n        },\n        tooltipOptions: null,\n        menuId: {\n            type: String,\n            default: null\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        },\n        ariaLabel: {\n            type: String,\n            default: null\n        },\n        ariaLabelledby: {\n            type: String,\n            default: null\n        }\n    },\n    data() {\n        return {\n            id: this.menuId,\n            currentIndex: -3,\n            focused: false,\n            focusedOptionIndex: -1\n        };\n    },\n    watch: {\n        menuId(newValue) {\n            this.id = newValue || UniqueComponentId();\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n    },\n    methods: {\n        getItemId(index) {\n            return `${this.id}_${index}`;\n        },\n        getItemProp(processedItem, name) {\n            return processedItem && processedItem.item ? resolve(processedItem.item[name]) : undefined;\n        },\n        getPTOptions(key, item, index) {\n            return this.ptm(key, {\n                context: {\n                    index,\n                    item,\n                    active: this.isItemActive(this.getItemId(index))\n                }\n            });\n        },\n        isSameMenuItem(event) {\n            return event.currentTarget && (event.currentTarget.isSameNode(event.target) || event.currentTarget.isSameNode(event.target.closest('[data-pc-section=\"item\"]')));\n        },\n        isItemActive(id) {\n            return id === this.focusedOptionIndex;\n        },\n        onListMouseLeave() {\n            this.currentIndex = -3;\n        },\n        onItemMouseEnter(index) {\n            this.currentIndex = index;\n        },\n        onItemClick(event, processedItem) {\n            if (this.isSameMenuItem(event)) {\n                const command = this.getItemProp(processedItem, 'command');\n\n                command && command({ originalEvent: event, item: processedItem.item });\n            }\n        },\n        onListFocus(event) {\n            this.focused = true;\n            this.changeFocusedOptionIndex(0);\n            this.$emit('focus', event);\n        },\n        onListBlur(event) {\n            this.focused = false;\n            this.focusedOptionIndex = -1;\n            this.$emit('blur', event);\n        },\n        onListKeyDown(event) {\n            switch (event.code) {\n                case 'ArrowDown': {\n                    if (this.position === 'left' || this.position === 'right') this.onArrowDownKey();\n                    event.preventDefault();\n                    break;\n                }\n\n                case 'ArrowUp': {\n                    if (this.position === 'left' || this.position === 'right') this.onArrowUpKey();\n                    event.preventDefault();\n                    break;\n                }\n\n                case 'ArrowRight': {\n                    if (this.position === 'top' || this.position === 'bottom') this.onArrowDownKey();\n                    event.preventDefault();\n                    break;\n                }\n\n                case 'ArrowLeft': {\n                    if (this.position === 'top' || this.position === 'bottom') this.onArrowUpKey();\n                    event.preventDefault();\n                    break;\n                }\n\n                case 'Home': {\n                    this.onHomeKey();\n                    event.preventDefault();\n                    break;\n                }\n\n                case 'End': {\n                    this.onEndKey();\n                    event.preventDefault();\n                    break;\n                }\n\n                case 'Enter':\n                case 'NumpadEnter':\n\n                case 'Space': {\n                    this.onSpaceKey(event);\n                    event.preventDefault();\n                    break;\n                }\n\n                default:\n                    break;\n            }\n        },\n        onArrowDownKey() {\n            const optionIndex = this.findNextOptionIndex(this.focusedOptionIndex);\n\n            this.changeFocusedOptionIndex(optionIndex);\n        },\n        onArrowUpKey() {\n            const optionIndex = this.findPrevOptionIndex(this.focusedOptionIndex);\n\n            this.changeFocusedOptionIndex(optionIndex);\n        },\n        onHomeKey() {\n            this.changeFocusedOptionIndex(0);\n        },\n        onEndKey() {\n            this.changeFocusedOptionIndex(find(this.$refs.list, 'li[data-pc-section=\"item\"][data-p-disabled=\"false\"]').length - 1);\n        },\n        onSpaceKey() {\n            const element = findSingle(this.$refs.list, `li[id=\"${`${this.focusedOptionIndex}`}\"]`);\n            const anchorElement = element && findSingle(element, '[data-pc-section=\"itemlink\"]');\n\n            anchorElement ? anchorElement.click() : element && element.click();\n        },\n        findNextOptionIndex(index) {\n            const menuitems = find(this.$refs.list, 'li[data-pc-section=\"item\"][data-p-disabled=\"false\"]');\n            const matchedOptionIndex = [...menuitems].findIndex((link) => link.id === index);\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex + 1 : 0;\n        },\n        findPrevOptionIndex(index) {\n            const menuitems = find(this.$refs.list, 'li[data-pc-section=\"item\"][data-p-disabled=\"false\"]');\n            const matchedOptionIndex = [...menuitems].findIndex((link) => link.id === index);\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex - 1 : 0;\n        },\n        changeFocusedOptionIndex(index) {\n            const menuitems = find(this.$refs.list, 'li[data-pc-section=\"item\"][data-p-disabled=\"false\"]');\n\n            let order = index >= menuitems.length ? menuitems.length - 1 : index < 0 ? 0 : index;\n\n            this.focusedOptionIndex = menuitems[order].getAttribute('id');\n        },\n        disabled(item) {\n            return typeof item.disabled === 'function' ? item.disabled() : item.disabled;\n        },\n        getMenuItemProps(item, index) {\n            return {\n                action: mergeProps(\n                    {\n                        tabindex: -1,\n                        'aria-hidden': true,\n                        class: this.cx('itemLink')\n                    },\n                    this.getPTOptions('itemLink', item, index)\n                ),\n                icon: mergeProps(\n                    {\n                        class: [this.cx('itemIcon'), item.icon]\n                    },\n                    this.getPTOptions('itemIcon', item, index)\n                )\n            };\n        }\n    },\n    computed: {\n        focusedOptionId() {\n            return this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : null;\n        }\n    },\n    directives: {\n        ripple: Ripple,\n        tooltip: Tooltip\n    }\n};\n</script>\n", "<template>\n    <div :class=\"containerClass\" :style=\"style\" v-bind=\"ptmi('root')\">\n        <DockSub :model=\"model\" :templates=\"$slots\" :tooltipOptions=\"tooltipOptions\" :position=\"position\" :menuId=\"menuId\" :aria-label=\"ariaLabel\" :aria-labelledby=\"ariaLabelledby\" :tabindex=\"tabindex\" :pt=\"pt\" :unstyled=\"unstyled\"></DockSub>\n    </div>\n</template>\n\n<script>\nimport BaseDock from './BaseDock.vue';\nimport DockSub from './DockSub.vue';\n\nexport default {\n    name: 'Dock',\n    extends: BaseDock,\n    inheritAttrs: false,\n    matchMediaListener: null,\n    data() {\n        return {\n            query: null,\n            queryMatches: false\n        };\n    },\n    mounted() {\n        this.bindMatchMediaListener();\n    },\n    beforeUnmount() {\n        this.unbindMatchMediaListener();\n    },\n    methods: {\n        bindMatchMediaListener() {\n            if (!this.matchMediaListener) {\n                const query = matchMedia(`(max-width: ${this.breakpoint})`);\n\n                this.query = query;\n                this.queryMatches = query.matches;\n\n                this.matchMediaListener = () => {\n                    this.queryMatches = query.matches;\n                    this.mobileActive = false;\n                };\n\n                this.query.addEventListener('change', this.matchMediaListener);\n            }\n        },\n        unbindMatchMediaListener() {\n            if (this.matchMediaListener) {\n                this.query.removeEventListener('change', this.matchMediaListener);\n                this.matchMediaListener = null;\n            }\n        }\n    },\n    computed: {\n        containerClass() {\n            return [this.class, this.cx('root')];\n        }\n    },\n    components: {\n        DockSub\n    }\n};\n</script>\n", "<template>\n    <div :class=\"containerClass\" :style=\"style\" v-bind=\"ptmi('root')\">\n        <DockSub :model=\"model\" :templates=\"$slots\" :tooltipOptions=\"tooltipOptions\" :position=\"position\" :menuId=\"menuId\" :aria-label=\"ariaLabel\" :aria-labelledby=\"ariaLabelledby\" :tabindex=\"tabindex\" :pt=\"pt\" :unstyled=\"unstyled\"></DockSub>\n    </div>\n</template>\n\n<script>\nimport BaseDock from './BaseDock.vue';\nimport DockSub from './DockSub.vue';\n\nexport default {\n    name: 'Dock',\n    extends: BaseDock,\n    inheritAttrs: false,\n    matchMediaListener: null,\n    data() {\n        return {\n            query: null,\n            queryMatches: false\n        };\n    },\n    mounted() {\n        this.bindMatchMediaListener();\n    },\n    beforeUnmount() {\n        this.unbindMatchMediaListener();\n    },\n    methods: {\n        bindMatchMediaListener() {\n            if (!this.matchMediaListener) {\n                const query = matchMedia(`(max-width: ${this.breakpoint})`);\n\n                this.query = query;\n                this.queryMatches = query.matches;\n\n                this.matchMediaListener = () => {\n                    this.queryMatches = query.matches;\n                    this.mobileActive = false;\n                };\n\n                this.query.addEventListener('change', this.matchMediaListener);\n            }\n        },\n        unbindMatchMediaListener() {\n            if (this.matchMediaListener) {\n                this.query.removeEventListener('change', this.matchMediaListener);\n                this.matchMediaListener = null;\n            }\n        }\n    },\n    computed: {\n        containerClass() {\n            return [this.class, this.cx('root')];\n        }\n    },\n    components: {\n        DockSub\n    }\n};\n</script>\n"],
  "mappings": "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",
  "names": ["theme", "_ref", "dt", "concat", "classes", "root", "_ref2", "instance", "props", "position", "queryMatches", "listContainer", "list", "item", "_ref3", "processedItem", "id", "isItemActive", "disabled", "itemContent", "itemLink", "itemIcon", "BaseStyle", "extend", "name", "name", "BaseComponent", "props", "position", "type", "String", "model", "style", "tooltipOptions", "menuId", "tabindex", "Number", "breakpoint", "ariaLabel", "ariaLabelledby", "DockStyle", "provide", "$pcDock", "$parentInstance", "hostName", "emits", "Array", "templates", "data", "id", "currentIndex", "focused", "focusedOptionIndex", "watch", "newValue", "UniqueComponentId", "mounted", "methods", "getItemId", "index", "concat", "getItemProp", "processedItem", "item", "resolve", "undefined", "getPTOptions", "key", "ptm", "context", "active", "isItemActive", "isSameMenuItem", "event", "currentTarget", "isSameNode", "target", "closest", "onListMouseLeave", "onItemMouseEnter", "onItemClick", "command", "originalEvent", "onListFocus", "changeFocusedOptionIndex", "$emit", "onListBlur", "onListKeyDown", "code", "onArrowDownKey", "preventDefault", "onArrowUpKey", "onHomeKey", "onEndKey", "onSpaceKey", "optionIndex", "findNextOptionIndex", "findPrevOptionIndex", "find", "$refs", "list", "length", "element", "findSingle", "anchorElement", "click", "menuitems", "matchedOptionIndex", "_toConsumableArray", "findIndex", "link", "order", "getAttribute", "disabled", "getMenuItemProps", "action", "mergeProps", "cx", "icon", "computed", "focusedOptionId", "directives", "ripple", "Ripple", "tooltip", "Tooltip", "_openBlock", "_createElementBlock", "_mergeProps", "_ctx", "_createElementVNode", "ref", "$data", "role", "$props", "$options", "onFocus", "apply", "arguments", "onBlur", "onKeydown", "onMouseleave", "_Fragment", "_renderList", "label", "onClick", "$event", "onMouseenter", "_withDirectives", "href", "url", "_createBlock", "_resolveDynamicComponent", "_directive_tooltip", "value", "script", "BaseDock", "inheritAttrs", "matchMediaListener", "query", "queryMatches", "bindMatchMediaListener", "beforeUnmount", "unbindMatchMediaListener", "_this", "matchMedia", "matches", "mobileActive", "addEventListener", "removeEventListener", "containerClass", "components", "DockSub", "ptmi", "_createVNode", "_component_DockSub", "$slots", "pt", "unstyled"]
}
